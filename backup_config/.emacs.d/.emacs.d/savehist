;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(search-ring counsel-describe-symbol-history ivy-history counsel-M-x-history input-method-history org-read-date-history minibuffer-history-search-history read-char-history empty-history magit-revision-history tmm--history command-history exwm-workspace--switch-history yes-or-no-p-history face-name-history buffer-name-history ido-buffer-history ido-file-history minibuffer-history file-name-history extended-command-history shell-command-history))
(setq search-ring '(#("ac-c" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("ac-" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("ESC" 0 3 (isearch-regexp-function nil isearch-case-fold-search nil)) #("curs" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("char" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("smah" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("engin" 0 5 (isearch-regexp-function nil isearch-case-fold-search t)) #("click" 0 5 (isearch-regexp-function nil isearch-case-fold-search t)) #("geom" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("exwm" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("important f f" 0 13 (isearch-regexp-function nil isearch-case-fold-search t)) #("12" 0 2 (isearch-case-fold-search t isearch-regexp-function nil)) #("font" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("size" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("cur" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) #("cursor" 0 6 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq counsel-describe-symbol-history '(#("^dired" 0 6 (ivy-index 226)) "dired" #("^engin m" 0 8 (ivy-index 0)) "engine/function-name"))
(setq ivy-history '(#("fire" 0 4 (ivy-index 0)) "firefox" #("origin" 0 6 (ivy-index 0)) #("bin/" 0 4 (ivy-index 0)) #("git pull" 0 8 (ivy-index 0)) #("tramp" 0 5 (ivy-index 0)) #(".e" 0 2 (ivy-index 0)) ".emacs.d/" #("init.el" 0 7 (ivy-index 2)) #("early-init.el" 0 13 (ivy-index 2)) #("fcitx" 0 5 (ivy-index 5)) "fcitx-configtool" #("smart-mode-line-2.13" 0 20 (ivy-index 0)) #("fcitx-" 0 6 (ivy-index 3)) #("do" 0 2 (ivy-index 1)) "dotfiles/" "doc/" #("*Messages*" 0 10 (ivy-index 1)) #("previous-system-messages-locale" 0 31 (ivy-index 0)) #("kri" 0 3 (ivy-index 0)) "krita" #("kr" 0 2 (ivy-index 0)) #("gim" 0 3 (ivy-index 0)) #("engine-mode" 0 11 (ivy-index 0)) #("exwm" 0 4 (ivy-index 7)) #("exwm-0.24" 0 9 (ivy-index 29)) #("smex-3.0" 0 8 (ivy-index 9)) #("package-" 0 8 (ivy-index 0)) #("pack li" 0 7 (ivy-index 1)) #("xah-fly-keys" 0 12 (ivy-index 6))))
(setq counsel-M-x-history '(#("^magit stat" 0 11 (ivy-index 0)) "magit-status" #("^mag stat" 0 9 (ivy-index 0)) #("^eval b" 0 7 (ivy-index 0)) "eval-buffer" #("^eval-b" 0 7 (ivy-index 0)) #("^pack insta" 0 11 (ivy-index 0)) "package-install" #("^pack inst" 0 10 (ivy-index 0)) #("^pack ref" 0 9 (ivy-index 1)) "package-refresh-contents" #("^pack dele" 0 10 (ivy-index 1)) "package-delete" #("^pack ins" 0 9 (ivy-index 0)) #("^deb" 0 4 (ivy-index 0)) "debug-watch" #("^eng" 0 4 (ivy-index 1)) "engine/search-github" #("^en mod" 0 7 (ivy-index 1)) "engine-mode" #("^engin" 0 6 (ivy-index 0)) #("^package re" 0 11 (ivy-index 2)) #("^pac" 0 4 (ivy-index 2)) #("^" 0 1 (ivy-index 0)) #("^pack " 0 6 (ivy-index 3))))
(setq read-char-history '("yes"))
(setq magit-revision-history '("origin/master"))
(setq tmm--history '("h==>Help" "m==>Minibuf" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq command-history '((find-file "/home/andou/html_learn/starBuzz/index.html") (kill-buffer "firefox") (kill-buffer "firefox<2>") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "brave") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "firefox")
;;;  (exwm-workspace-switch #<frame *scratch* 0x55dba4a8b7d0>)
 ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "alacritty") (shell-command "reboot" nil nil) (magit-status "/home/andou/html_learn/" '((56 . 31) (("/home/andou/html_learn/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote))) . "refs/remotes/origin/main") (("/home/andou/html_learn/" "rev-parse" "--short" "HEAD~") . "b647819") (("/home/andou/html_learn/" "rev-parse" "--short" "HEAD") . "804f16c") (("/home/andou/html_learn/" "rev-parse" "--verify" "HEAD~10")) (("/home/andou/html_learn/" "rev-parse" "@{upstream}") . "804f16cae7a94ee3c637c162ad856fb17e8e445e") (("/home/andou/html_learn/" "name-rev" "--name-only" "--no-undefined" "@{upstream}") . "main") (("/home/andou/html_learn/" "name-rev" "--name-only" "--no-undefined" #("origin/main" 0 11 (face magit-branch-remote))) . "main") (("/home/andou/html_learn/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/html_learn/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/html_learn/" magit-git-dir "BISECT_LOG") . "/home/andou/html_learn/.git/BISECT_LOG") (("/home/andou/html_learn/" magit-git-dir "REVERT_HEAD") . "/home/andou/html_learn/.git/REVERT_HEAD") (("/home/andou/html_learn/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/html_learn/.git/CHERRY_PICK_HEAD") (("/home/andou/html_learn/" magit-git-dir "rebase-apply/applying") . "/home/andou/html_learn/.git/rebase-apply/applying") (("/home/andou/html_learn/" magit-git-dir "rebase-apply/onto") . "/home/andou/html_learn/.git/rebase-apply/onto") (("/home/andou/html_learn/" magit-git-dir "rebase-merge") . "/home/andou/html_learn/.git/rebase-merge") (("/home/andou/html_learn/" magit-git-dir "MERGE_HEAD") . "/home/andou/html_learn/.git/MERGE_HEAD") (("/home/andou/html_learn/" "rev-parse" "--git-dir") . ".git") (("/home/andou/html_learn/" "describe" "--contains" "HEAD")) (("/home/andou/html_learn/" "describe" "--long" "--tags")) (("/home/andou/html_learn/" "show" "--no-patch" "--format=%s" #("origin/main^{commit}" 0 11 (face magit-branch-remote)) "--") . "init commit") (("/home/andou/html_learn/" "rev-parse" "--verify" #("origin/main" 0 11 (face magit-branch-remote))) . "804f16cae7a94ee3c637c162ad856fb17e8e445e") (("/home/andou/html_learn/" "show" "--no-patch" "--format=%h %s" "main^{commit}" "--") . "804f16c init commit") (("/home/andou/html_learn/" "symbolic-ref" "--short" "HEAD") . "main") (("/home/andou/html_learn/" "rev-parse" "--verify" "HEAD") . "804f16cae7a94ee3c637c162ad856fb17e8e445e") (("/home/andou/html_learn/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/html_learn.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.main.remote" ("origin") "branch.main.merge" ("refs/heads/main") "branch.main.pushremote" ("origin") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/html_learn/" . magit-toplevel) . "/home/andou/html_learn/") (("/home/andou/html_learn/" "rev-parse" "--show-cdup") . "") (("/home/andou/html_learn/" "rev-parse" "--show-toplevel") . "/home/andou/html_learn") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-push-current-to-pushremote nil "origin") (magit-status "/home/andou/html_learn/" '((60 . 29) (("/home/andou/html_learn/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote))) . "refs/remotes/origin/main") (("/home/andou/html_learn/" "rev-parse" "--short" "HEAD~") . "1d970b5") (("/home/andou/html_learn/" "rev-parse" "--short" "HEAD") . "b647819") (("/home/andou/html_learn/" "rev-parse" "--verify" "HEAD~10")) (("/home/andou/html_learn/" "rev-parse" "@{upstream}") . "b647819f9d570a3b25ee17326e14282ba06398b4") (("/home/andou/html_learn/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/html_learn/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/html_learn/" magit-git-dir "BISECT_LOG") . "/home/andou/html_learn/.git/BISECT_LOG") (("/home/andou/html_learn/" magit-git-dir "REVERT_HEAD") . "/home/andou/html_learn/.git/REVERT_HEAD") (("/home/andou/html_learn/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/html_learn/.git/CHERRY_PICK_HEAD") (("/home/andou/html_learn/" magit-git-dir "rebase-apply/applying") . "/home/andou/html_learn/.git/rebase-apply/applying") (("/home/andou/html_learn/" magit-git-dir "rebase-apply/onto") . "/home/andou/html_learn/.git/rebase-apply/onto") (("/home/andou/html_learn/" magit-git-dir "rebase-merge") . "/home/andou/html_learn/.git/rebase-merge") (("/home/andou/html_learn/" magit-git-dir "MERGE_HEAD") . "/home/andou/html_learn/.git/MERGE_HEAD") (("/home/andou/html_learn/" "rev-parse" "--git-dir") . ".git") (("/home/andou/html_learn/" "describe" "--contains" "HEAD")) (("/home/andou/html_learn/" "describe" "--long" "--tags")) (("/home/andou/html_learn/" "show" "--no-patch" "--format=%s" #("origin/main^{commit}" 0 11 (face magit-branch-remote)) "--") . "Delete index.html") (("/home/andou/html_learn/" "rev-parse" "--verify" #("origin/main" 0 11 (face magit-branch-remote))) . "b647819f9d570a3b25ee17326e14282ba06398b4") (("/home/andou/html_learn/" "show" "--no-patch" "--format=%h %s" "main^{commit}" "--") . "b647819 Delete index.html") (("/home/andou/html_learn/" "symbolic-ref" "--short" "HEAD") . "main") (("/home/andou/html_learn/" "rev-parse" "--verify" "HEAD") . "b647819f9d570a3b25ee17326e14282ba06398b4") (("/home/andou/html_learn/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/html_learn.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.main.remote" ("origin") "branch.main.merge" ("refs/heads/main") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/html_learn/" . magit-toplevel) . "/home/andou/html_learn/") (("/home/andou/html_learn/" "rev-parse" "--show-cdup") . "") (("/home/andou/html_learn/" "rev-parse" "--show-toplevel") . "/home/andou/html_learn") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (shell-command "suspend" nil nil) (kill-buffer "Brave-browser") (dired-create-directory "/home/andou/html_learn/starBuzz") (shell-command "poweroff" nil nil) (find-file "/home/andou/.xinitrc") (find-file "/home/andou/.emacs.d/init.el") (dired-create-directory "/home/andou/tendou_subaru_site") (find-file "/home/andou/.emacs.d/early-init.el") (find-file "/home/andou/dotfiles/backup_config/.emacs.d/early-init.el") (find-file "/home/andou/dotfiles/backup_config/.emacs.d/init.el") (eval-buffer) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "boa") (describe-key '(("n" . [110]))) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "fcitx-configtool") (kill-buffer "early-init.el") (package-refresh-contents) (package-delete #s(package-desc smart-mode-line (2 13) "A color coded smart mode-line." ((emacs (24 3)) (rich-minority (0 1 1))) nil nil "/home/andou/.emacs.d/elpa/smart-mode-line-2.13" ((:url . "http://github.com/Malabarba/smart-mode-line") (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:keywords "mode-line" "faces" "themes") (:commit . "9a6d821e0c78361ab35c6e403fc582b76558a1a7")) nil) nil nil) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "st") (find-file "/home/andou/.gitconfig") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "bra") (debug-watch 'previous-system-messages-locale) (find-file "/home/andou/.config/zsh/.zprofile") (comment-line 1) (execute-extended-command nil "comment-line" "comment-l") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "krita") (find-file "/home/andou/.emacs.d/setting.org") (org-insert-structure-template "src") (engine-mode 'toggle) (package-install 'engine-mode nil) (find-file "/home/andou/hello_world/src/main.rs") (kill-buffer "st-256color") (package-install 'exwm nil) (package-delete #s(package-desc exwm (0 24) "Emacs X Window Manager" ((xelb (0 18))) nil nil "/home/andou/.emacs.d/elpa/exwm-0.24" ((:url . "https://github.com/ch11ng/exwm") (:maintainer "Chris Feng" . "chris.w.feng@gmail.com") (:authors ("Chris Feng" . "chris.w.feng@gmail.com")) (:keywords "unix")) t) nil nil) (package-delete #s(package-desc smex (3 0) "M-x interface with Ido-style fuzzy matching." nil nil nil "/home/andou/.emacs.d/elpa/smex-3.0" ((:url . "http://github.com/nonsequitur/smex/") (:maintainer "Cornelius Mika" . "cornelius.mika@gmail.com") (:authors ("Cornelius Mika" . "cornelius.mika@gmail.com")) (:keywords "convenience" "usability") (:commit . "97b4a4d82a4449e3f1a3fa8a93387d6eb0ef9c26")) nil) nil nil) (package-list-packages nil) (package-install 'xah-fly-keys nil) (find-file "/home/andou/.emacs.d/myinit.org") (write-file "/home/andou/dotfiles/backup_config/.emacs.d/myinit.org" t) (customize-face '(default)) (customize-themes) (package-install 'which-key nil) (write-file "/home/andou/main/dwm-6.2/config.h" t) (write-file "/home/andou/.emacs.d/myinit.org" t) (write-file "/home/andou/.xinitrc" t) (write-file "/home/andou/.config/alacritty/alacritty.yml" t) (find-file "/home/andou/main/dwm-6.2/config.h") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "fcitx-configtool ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "alacritty ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "brave ") (kill-buffer "addresse_pointer.c") (dired "/home/andou/learnc/head_first/" nil) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "steam") (kill-buffer "pcloud") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "pcloud ") (kill-buffer "alacritty.yml") (find-file "/home/andou/.config/alacritty/alacritty.yml") (kill-buffer "myinit.org") (kill-buffer ".xinitrc") (kill-buffer "config.h") (find-file "/home/andou/main/st/config.h") (dired "/home/andou/.config/" nil) (package-autoremove) (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "b99f135") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "5e7d194") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "81882375f2356219afcd7ba19c51fabad30d7448") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "5e7d194bdbc9d83edd38497fbf4484963278cca5") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "update fcitx") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "5e7d194bdbc9d83edd38497fbf4484963278cca5") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "5e7d194 update fcitx") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "5e7d194bdbc9d83edd38497fbf4484963278cca5") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((61 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "4d3c51c") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "b99f135") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "159cda417f6fbd39c9488a1c5a69fcdb6b7036e7") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "updateq") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "b99f135 updateq") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "magit: .config") (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "4d3c51c") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "b99f135") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "159cda417f6fbd39c9488a1c5a69fcdb6b7036e7") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "updateq") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "b99f135 updateq") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (dired "/home/andou/.config/nvim/" nil) (package-delete #s(package-desc wakatime-mode (20180920 702) "Automatic time tracking extension for WakaTime" nil nil nil "/home/andou/.emacs.d/elpa/wakatime-mode-20180920.702" ((:maintainer "Alan Hamlett" . "alan@wakatime.com") (:authors ("Gabor Torok" . "gabor@20y.hu")) (:keywords "calendar" "comm") (:commit . "2531cb58287770883ba534d20b3288955c4d6ef3")) nil) nil nil) (dired "/home/andou/.emacs.d/" nil) (package-install 'solarized-theme nil) (find-file "/home/andou/.emacs.d/myinit.el") (toggle-word-wrap nil) (org-mode) (package-delete #s(package-desc nyan-mode (1 1 3) "Nyan Cat shows position in current buffer in mode-line." nil nil nil "/home/andou/.emacs.d/elpa/nyan-mode-1.1.3" ((:url . "https://github.com/TeMPOraL/nyan-mode/") (:maintainer "Jacek \"TeMPOraL\" Zlydach" . "temporal.pl@gmail.com") (:authors ("Jacek \"TeMPOraL\" Zlydach" . "temporal.pl@gmail.com")) (:keywords "nyan" "cat" "lulz" "scrolling" "pop tart cat" "build something amazing") (:commit . "06e67ab2c490756d3eeed4a68aba7c33e508a5d5")) nil) nil nil) (find-file "/home/andou/.config/zsh/.zshrc") (magit-show-commit "origin/master" '("--stat" "--no-ext-diff") nil nil) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "29fb0ec") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "7b205c1") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "61a31e8e09eead54266a13275fa7908e8902a2cd") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "Setting changed") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "7b205c1 Setting changed") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.pager" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "29fb0ec") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "7b205c1") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "61a31e8e09eead54266a13275fa7908e8902a2cd") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "Setting changed") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "7b205c1 Setting changed") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.pager" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "pacman.conf") (find-file "/sudo::/etc/pacman.conf") (find-file "/home/andou/.config/newsboat/urls") (kill-buffer "Gimp-2.10") (kill-buffer "Fcitx-config-gtk3") (kill-buffer ".zprofile") (kill-buffer ".gitconfig") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "gimp") (kill-buffer "*ansi-term*") (switch-to-buffer "Brave-browser") (ansi-term "/bin/zsh") (kill-buffer "grub") (find-file "/sudo::/etc/default/grub") (kill-buffer "grub") (dired "/etc/default/" nil) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "polychromatic-controller ") (kill-buffer "main.c") (find-file "/home/andou/learnc/calculator/main.c") (kill-buffer "main.c") (find-file "/home/andou/learnc/caculator/main.c") (kill-buffer "switch_card.c") (dired "/home/andou/learnc/" nil) (kill-buffer "tictactoe.c") (find-file "/home/andou/test_project/tictactoe_c/tictactoe.c") (kill-buffer ".gitconfig") (kill-buffer "*Edit Macro*") (switch-to-buffer "Brave-browser") (kill-buffer ".en_QC") (find-file "/home/andou/.en_QC") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "flameshot ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "dmenu") (kill-buffer "tictactoe.c") (find-file "/home/andou/test_project/tictactoe_c/tictactoe.c") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "woeusb") (switch-to-buffer "Brave-browser") (kill-buffer "COMMIT_EDITMSG") (switch-to-buffer "Brave-browser") (kill-buffer "*unsent mail*") (kill-buffer "*ansi-term*") (kill-buffer "*ansi-term*") (kill-buffer "*terminal*") (term "/bin/zsh") (kill-buffer "*terminal*") (load-file "/home/andou/.emacs.d/init.el") (kill-buffer "init.el") (switch-to-buffer "Brave-browser") (kill-buffer "*terminal*") (switch-to-buffer "Brave-browser") (kill-buffer "*shell*") (shell nil) (switch-to-buffer "Brave-browser") (kill-buffer "lfrc") (find-file "/home/andou/.config/lf/lfrc") (kill-buffer "lfrc") (find-file "/home/andou/.config/lf/lfrc") (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "c91649b") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "2c19dfb") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "696736ef7d1795040d90b4104fecb207afab6b5b") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "2c19dfb70e000d8fddc16716c162c7b56badae83") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "Change vimb styles.css") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "2c19dfb70e000d8fddc16716c162c7b56badae83") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "2c19dfb Change vimb styles.css") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "2c19dfb70e000d8fddc16716c162c7b56badae83") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((63 . 34) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "c91649bf1c7d84e095a40469ff8656ff1ccb2973^{commit}" "--") . #("c91649b deleted the plugin folder fome repo folder" 0 7 (face magit-hash))) (("/home/andou/.config/" "ls-files" "--unmerged")) (("/home/andou/.config/" "rev-parse" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" magit-git-dir "sequencer/head") . "/home/andou/.config/.git/sequencer/head") (("/home/andou/.config/" magit-git-dir "sequencer/todo") . "/home/andou/.config/.git/sequencer/todo") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "style.css") (find-file "/home/andou/.config/vimb/style.css") (kill-buffer "style.css") (find-file "/home/andou/.config/vimb/style.css") (magit-status "/home/andou/.config/" '((63 . 34) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "c91649bf1c7d84e095a40469ff8656ff1ccb2973^{commit}" "--") . #("c91649b deleted the plugin folder fome repo folder" 0 7 (face magit-hash))) (("/home/andou/.config/" "ls-files" "--unmerged")) (("/home/andou/.config/" "rev-parse" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" magit-git-dir "sequencer/head") . "/home/andou/.config/.git/sequencer/head") (("/home/andou/.config/" magit-git-dir "sequencer/todo") . "/home/andou/.config/.git/sequencer/todo") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "Fcitx-config-gtk3") (magit-status "/home/andou/.config/" '((64 . 34) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "c91649bf1c7d84e095a40469ff8656ff1ccb2973^{commit}" "--") . #("c91649b deleted the plugin folder fome repo folder" 0 7 (face magit-hash))) (("/home/andou/.config/" "ls-files" "--unmerged")) (("/home/andou/.config/" "rev-parse" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" magit-git-dir "sequencer/head") . "/home/andou/.config/.git/sequencer/head") (("/home/andou/.config/" magit-git-dir "sequencer/todo") . "/home/andou/.config/.git/sequencer/todo") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "Brave-browser<2>") (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer ".gitignore") (find-file "/home/andou/.config/.gitignore") (kill-buffer ".zprofile") (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "de73003") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "945ed9b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "49548fe3c4a79c39a16bf5acf25825f8676cfc1b") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "change git editor") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "945ed9b change git editor") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "de73003") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "945ed9b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "49548fe3c4a79c39a16bf5acf25825f8676cfc1b") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "change git editor") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "945ed9b change git editor") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer ".gitconfig") (kill-buffer ".zprofile") (kill-buffer ".asoundrc") (find-file "/home/andou/.asoundrc") (kill-buffer "Steam") (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "61a31e8") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "de73003") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "c971419f45bcc9904a55d4c05e128d1f0900bf31") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "minor change") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "de73003 minor change") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.pager" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer ".zprofile") (kill-buffer ".gitconfig") (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "61a31e8") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "de73003") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "c971419f45bcc9904a55d4c05e128d1f0900bf31") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "minor change") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "de73003 minor change") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs -c") "core.pager" ("emacs -c") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (git-commit-save-message) (kill-buffer "init.vim") (kill-buffer "Emacs") (server-force-delete nil) (kill-buffer "Emacs") (kill-buffer ".gitconfig") (kill-buffer "Emacs") (kill-buffer ".zprofile") (kill-buffer ".gitconfig") (kill-buffer "Emacs") (switch-to-buffer "Brave-browser") (switch-to-buffer "andou") (switch-to-buffer "unity_test") (dired "/home/andou/" nil) (kill-buffer "test.html") (find-file "/home/andou/test.html") (package-install 'gruvbox-theme nil) (kill-buffer ".zprofile") (kill-buffer ".zshrc") (zap-to-char 1 27) (package-delete #s(package-desc spacemacs-theme (20200615 1304) "Color theme with a dark and light versions" nil nil nil "/home/andou/.emacs.d/elpa/spacemacs-theme-20200615.1304" ((:url . "https://github.com/nashamri/spacemacs-theme") (:keywords "color" "theme") (:commit . "e39254159a4fa99a1a92037e4ae23216d362aab1")) nil) nil nil) (package-delete #s(package-desc doom-themes (20200730 744) "an opinionated pack of modern color-themes" ((emacs (25 1)) (cl-lib (0 5))) nil nil "/home/andou/.emacs.d/elpa/doom-themes-20200730.744" ((:url . "https://github.com/hlissner/emacs-doom-theme") (:maintainer "Henrik Lissner" . "henrik@lissner.net") (:authors ("Henrik Lissner <http://github/hlissner>")) (:keywords "dark" "light" "blue" "atom" "one" "theme" "neotree" "icons" "faces" "nova") (:commit . "180747a4cb848b6378b13bcaf908ea12c95bb4a6")) nil) nil nil) (package-install 'doom-themes nil) (package-delete #s(package-desc monokai-theme (20200416 2001) "A fruity color theme for Emacs." nil nil nil "/home/andou/.emacs.d/elpa/monokai-theme-20200416.2001" ((:url . "http://github.com/oneKelvinSmith/monokai-emacs") (:maintainer "Kelvin Smith" . "oneKelvinSmith@gmail.com") (:authors ("Kelvin Smith" . "oneKelvinSmith@gmail.com")) (:commit . "4281fc13dadef98942c8d43024de024f2392fec5")) nil) nil nil) (zap-to-char 1 134217827) (package-install 'monokai-theme nil) (package-install 'spacemacs-theme nil) (switch-to-buffer "Brave-browser") (shell-command "dmenu" nil nil) (package-install 'exotica-theme nil) (list-packages nil) (kill-buffer "*Org Src myinit.org[ emacs-lisp ]*") (list-packages nil) (describe-key "\241" 1 nil) (shell-command "dmenufm" nil nil) (shell-command "demufm" nil nil) (describe-key [67108897] 1 nil) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "dmenufm") (describe-key "c" 1 nil) (switch-to-buffer "Brave-browser")))
(setq exwm-workspace--switch-history '(#("[0] 1  2  3 " 1 2 (face (:foreground "green")) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil)) #(" 0 [1] 2  3 " 1 2 (face (:foreground "green")) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil)) #(" 0  1 [2] 3 " 1 2 (face (:foreground "green")) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil)) #(" 0  1  2 [3]" 1 2 (face (:foreground "green")) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil))))
(setq yes-or-no-p-history '("no" "yes"))
(setq face-name-history '("default"))
(setq buffer-name-history '("firefox" "firefox<2>" "Brave-browser" "early-init.el" "st-256color" "addresse_pointer.c" "pcloud" "alacritty.yml" "myinit.org" ".xinitrc" "config.h" "magit: .config" "pacman.conf" "Gimp-2.10" "Fcitx-config-gtk3" ".zprofile" ".gitconfig" "*ansi-term*" "grub" "main.c" "switch_card.c" "tictactoe.c" "*Edit Macro*" ".en_QC" "COMMIT_EDITMSG" "*unsent mail*" "*terminal*" "init.el" "*shell*" "lfrc" "style.css" "Brave-browser<2>" ".gitignore" ".asoundrc" "Steam" "init.vim" "Emacs" " Brave-browser" "andou" "unity_test" "test.html" ".zshrc" "*Org Src myinit.org[ emacs-lisp ]*" "evdev.lst" "exwm-autoloads.el" "exwm-core.el" ".emacs.d" "exwm.org" "exwm-config.el" "x.c" "win.h" "config.mk" "Makefile" "*scratch*" "custom.el.gz" "myinit.o"))
(setq ido-buffer-history '("firefox" "firefox<2>" "Brave-browser" "early-init.el" "st-256color" "addresse_pointer.c" "pcloud" "alacritty.yml" "myinit.org" ".xinitrc" "config.h" "magit: .config" "pacman.conf" "Gimp-2.10" "Fcitx-config-gtk3" ".zprofile" ".gitconfig" "*ansi-term*" "grub" "main.c" "switch_card.c" "tictactoe.c" "*Edit Macro*" ".en_QC" "COMMIT_EDITMSG" "*unsent mail*" "*terminal*" "init.el" "*shell*" "lfrc" "style.css" "Brave-browser<2>" ".gitignore" ".asoundrc" "Steam" "init.vim" "Emacs" " Brave-browser" "andou" "unity_test" "test.html" ".zshrc" "*Org Src myinit.org[ emacs-lisp ]*" "evdev.lst" "exwm-autoloads.el" "exwm-core.el" ".emacs.d" "exwm.org" nil "exwm-config.el" "x.c" "win.h" "config.mk" "Makefile" "*scratch*" "custom.el.gz" "myinit.el"))
(setq ido-file-history '("index.html" "." "starBuzz" ".xinitrc" "init.el" "tendou_subaru_site" "early-init.el" ".gitconfig" ".zprofile" "setting.org" "main.rs" "myinit.org" "config.h" "alacritty.yml" nil "myinit.el" ".zshrc" "pacman.conf" "urls" "grub" "main.c" "tictactoe.c" ".en_QC" "lfrc" "style.css" ".gitignore" ".asoundrc" "test.html" "evdev.lst" "exwm-config.el" "exwm.org" "init.vim"))
(setq minibuffer-history '("char" "which-key" "xah-fly-keys" "#" "origin" "wakatime-mode-20180920.702" "solarized-theme" "nyan-mode-1.1.3" "/bin/zsh" "gruvbox-theme" "spacemacs-theme-20200615.1304" "doom-themes-20200730.744" "doom-themes" "monokai-theme-20200416.2001" "monokai-theme" "spacemacs-theme" "exotica-theme" "frame-background-mode" "solarized-theme-1.3.1" "\"" "dracula-theme-1.7.0" "gruvbox-theme-1.28.0" "use-package"))
(setq file-name-history '("/home/andou/html_learn/starBuzz/index.html" "/home/andou/.xinitrc" "/home/andou/.emacs.d/init.el" "/home/andou/.emacs.d/early-init.el" "/home/andou/dotfiles/backup_config/.emacs.d/early-init.el" "/home/andou/dotfiles/backup_config/.emacs.d/init.el" #("/home/andou/.emacs.d/" 0 21 (ivy-index 5)) "/home/andou/.gitconfig" "/home/andou/.config/zsh/.zprofile" "/home/andou/.emacs.d/setting.org" "/home/andou/hello_world/src/main.rs" "/home/andou/.emacs.d/myinit.org" "/home/andou/main/dwm-6.2/config.h" "/home/andou/.config/alacritty/alacritty.yml" "/home/andou/main/st/config.h" "/home/andou/.emacs.d/myinit.el" "/home/andou/.config/zsh/.zshrc" "/sudo::/etc/pacman.conf" "/home/andou/.config/newsboat/urls" "/sudo::/etc/default/grub" "/home/andou/learnc/calculator/main.c" "/home/andou/learnc/caculator/main.c" "/home/andou/test_project/tictactoe_c/tictactoe.c" "/home/andou/.en_QC" "/home/andou/.config/lf/lfrc" "/home/andou/.config/vimb/style.css" "/home/andou/.config/.gitignore" "/home/andou/.asoundrc" "/home/andou/test.html" "/usr/share/X11/xkb/rules/evdev.lst" "/home/andou/.emacs.d/elpa/exwm-0.24/exwm-config.el" "/home/andou/.emacs.d/exwm.org" "/home/andou/.config/nvim/init.vim" "~/.emacs.d/myinit.org" "~/.emacs.d/myinit.o" "~/.emacs.d/init.el"))
(setq extended-command-history '("comment-line" "package-install" "package-delete" "package-list-packages" "package-refresh-contents" "write-file" "customize-face" "customize-themes" "org-insert-structure-template" "which-key-mode" "dired" "package-autoremove" "toggle-word-wrap" "org-mode" "ansi-term" "term" "load-file" "shell" "git-commit-save-message" "server-force-delete" "list-packages" "describe-key" "copy-directory" "copy-file" "customize-variable"))
(setq shell-command-history '("brave" "firefox" "alacritty" "reboot" "suspend" "poweroff" "boa" "fcitx-configtool" "st" "bra" "krita" "fcitx-configtool " "alacritty " "brave " "steam" "pcloud " "gimp" "polychromatic-controller " "flameshot " "dmenu" "woeusb" "dmenufm" "demufm" "minecraft-launcher " "vimb"))
(setq kill-ring '("" "" "" "" "" "" #("(custom-set-variables
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 22 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #(";; EXWM
(use-package exwm
  :init
  (setq mouse-autoselect-window nil))

;; Fix problem with ido
(require 'exwm-config)
(exwm-config-ido)

;; Set the initial number of workspace
(setq exwm-workspace-number 4)

(add-hook 'exwm-update-class-hook
          (lambda ()
            (exwm-workspace-rename-buffer exwm-class-name)))

;; Global keybindings can be defined with `exwm-input-global-keys'.
;; Here are a few examples:
(setq exwm-input-global-keys
      `(
        ;; Bind \"s-r\" to exit char-mode and fullscreen mode.
        ([?\\s-r] . exwm-reset)
        ;; Bind \"s-w\" to switch workspace interactively.
        ([?\\s-w] . exwm-workspace-switch)
        ;; Bind \"s-0\" to \"s-9\" to switch to a workspace by its index.
        ,@(mapcar (lambda (i)
                    `(,(kbd (format \"s-%d\" i)) .
                      (lambda ()
                        (interactive)
                        (exwm-workspace-switch-create ,i))))
                  (number-sequence 0 9))
        ;; Bind \"s-&\" to launch applications ('M-&' also works if the output
        ;; buffer does not bother you).
        ([?\\s-&] . (lambda (command)
		     (interactive (list (read-shell-command \"$ \")))
		     (start-process-shell-command command nil command)))
        ;; Bind \"s-<f2>\" to \"slock\", a simple X display locker.
        ([s-f2] . (lambda ()
		    (interactive)
		    (start-process \"\" nil \"/usr/bin/slock\")))))

(exwm-enable)

;;(when dw/exwm-enabled
  ;; These keys should always pass through to Emacs
(setq exwm-input-prefix-keys
   '(?\\C-x
     ?\\C-h
     ?\\M-x
     ?\\M-`
     ?\\M-&
     ?\\M-:
     ?\\C-\\M-j  ;; Buffer list
     ?\\C-\\M-k  ;; Browser list
     ?\\C-\\     ;; Ctrl+Space
     ?\\C-\\;))

  ;; Ctrl+Q will enable the next key to be sent directly
  (define-key exwm-mode-map [?\\C-q] 'exwm-input-send-next-key)" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face (rainbow-delimiters-depth-1-face)) 9 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t) 21 25 (fontified t face font-lock-constant-face) 25 28 (fontified t) 28 33 (fontified t face font-lock-builtin-face) 33 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-2-face)) 37 41 (fontified t face font-lock-keyword-face) 41 69 (fontified t) 69 70 (fontified t face (rainbow-delimiters-depth-2-face)) 70 71 (fontified t face (rainbow-delimiters-depth-1-face)) 71 73 (fontified t) 73 76 (fontified t face font-lock-comment-delimiter-face) 76 97 (fontified t face font-lock-comment-face) 97 98 (fontified t face (rainbow-delimiters-depth-1-face)) 98 105 (fontified t face font-lock-keyword-face) 105 107 (fontified t) 107 118 (fontified t face font-lock-constant-face) 118 119 (fontified t face (rainbow-delimiters-depth-1-face)) 119 120 (fontified t) 120 121 (fontified t face (rainbow-delimiters-depth-1-face)) 121 136 (fontified t) 136 137 (fontified t face (rainbow-delimiters-depth-1-face)) 137 139 (fontified t) 139 142 (fontified t face font-lock-comment-delimiter-face) 142 178 (fontified t face font-lock-comment-face) 178 179 (fontified t face (rainbow-delimiters-depth-1-face)) 179 183 (fontified t face font-lock-keyword-face) 183 207 (fontified t) 207 208 (fontified t face (rainbow-delimiters-depth-1-face)) 208 210 (fontified t) 210 211 (fontified t face (rainbow-delimiters-depth-1-face)) 211 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-2-face)) 255 261 (fontified t face font-lock-keyword-face) 261 262 (fontified t) 262 263 (fontified t face (rainbow-delimiters-depth-3-face)) 263 264 (fontified t face (rainbow-delimiters-depth-3-face)) 264 277 (fontified t) 277 278 (fontified t face (rainbow-delimiters-depth-3-face)) 278 322 (fontified t) 322 323 (fontified t face (rainbow-delimiters-depth-3-face)) 323 324 (fontified t face (rainbow-delimiters-depth-2-face)) 324 325 (fontified t face (rainbow-delimiters-depth-1-face)) 325 327 (fontified t) 327 330 (fontified t face font-lock-comment-delimiter-face) 330 370 (fontified t face font-lock-comment-face) 370 392 (fontified t face (font-lock-constant-face font-lock-comment-face)) 392 394 (fontified t face font-lock-comment-face) 394 395 (fontified t face font-lock-comment-face) 395 398 (fontified t face font-lock-comment-delimiter-face) 398 423 (fontified t face font-lock-comment-face) 423 424 (fontified t face (rainbow-delimiters-depth-1-face)) 424 428 (fontified t face font-lock-keyword-face) 428 459 (fontified t) 459 460 (fontified t face (rainbow-delimiters-depth-2-face)) 460 469 (fontified t) 469 472 (fontified t face font-lock-comment-delimiter-face) 472 522 (fontified t face font-lock-comment-face) 522 530 (fontified t) 530 531 (fontified t face (rainbow-delimiters-depth-3-face)) 531 532 (fontified t face (rainbow-delimiters-depth-4-face)) 532 537 (fontified t) 537 538 (fontified t face (rainbow-delimiters-depth-4-face)) 538 551 (fontified t) 551 552 (fontified t face (rainbow-delimiters-depth-3-face)) 552 561 (fontified t) 561 564 (fontified t face font-lock-comment-delimiter-face) 564 610 (fontified t face font-lock-comment-face) 610 618 (fontified t) 618 619 (fontified t face (rainbow-delimiters-depth-3-face)) 619 620 (fontified t face (rainbow-delimiters-depth-4-face)) 620 625 (fontified t) 625 626 (fontified t face (rainbow-delimiters-depth-4-face)) 626 650 (fontified t) 650 651 (fontified t face (rainbow-delimiters-depth-3-face)) 651 660 (fontified t) 660 663 (fontified t face font-lock-comment-delimiter-face) 663 722 (fontified t face font-lock-comment-face) 722 732 (fontified t) 732 733 (fontified t face (rainbow-delimiters-depth-3-face)) 733 740 (fontified t) 740 741 (fontified t face (rainbow-delimiters-depth-4-face)) 741 747 (fontified t face font-lock-keyword-face) 747 748 (fontified t) 748 749 (fontified t face (rainbow-delimiters-depth-5-face)) 749 750 (fontified t) 750 751 (fontified t face (rainbow-delimiters-depth-5-face)) 751 773 (fontified t) 773 774 (fontified t face (rainbow-delimiters-depth-5-face)) 774 775 (fontified t) 775 776 (fontified t face (rainbow-delimiters-depth-6-face)) 776 780 (fontified t) 780 781 (fontified t face (rainbow-delimiters-depth-7-face)) 781 788 (fontified t) 788 794 (fontified t face font-lock-string-face) 794 796 (fontified t) 796 797 (fontified t face (rainbow-delimiters-depth-7-face)) 797 798 (fontified t face (rainbow-delimiters-depth-6-face)) 798 823 (fontified t) 823 824 (fontified t face (rainbow-delimiters-depth-6-face)) 824 830 (fontified t face font-lock-keyword-face) 830 831 (fontified t) 831 832 (fontified t face (rainbow-delimiters-depth-7-face)) 832 833 (fontified t face (rainbow-delimiters-depth-7-face)) 833 858 (fontified t) 858 859 (fontified t face (rainbow-delimiters-depth-7-face)) 859 870 (fontified t face font-lock-keyword-face) 870 871 (fontified t face (rainbow-delimiters-depth-7-face)) 871 895 (fontified t) 895 896 (fontified t) 896 897 (fontified t face (rainbow-delimiters-depth-7-face)) 897 928 (fontified t) 928 929 (fontified t face (rainbow-delimiters-depth-7-face)) 929 930 (fontified t face (rainbow-delimiters-depth-6-face)) 930 931 (fontified t face (rainbow-delimiters-depth-5-face)) 931 932 (fontified t face (rainbow-delimiters-depth-4-face)) 932 933 (fontified t) 933 951 (fontified t) 951 952 (fontified t face (rainbow-delimiters-depth-4-face)) 952 971 (fontified t) 971 972 (fontified t face (rainbow-delimiters-depth-4-face)) 972 973 (fontified t face (rainbow-delimiters-depth-3-face)) 973 982 (fontified t) 982 985 (fontified t face font-lock-comment-delimiter-face) 985 1051 (fontified t face font-lock-comment-face) 1051 1059 (fontified t) 1059 1062 (fontified t face font-lock-comment-delimiter-face) 1062 1091 (fontified t face font-lock-comment-face) 1091 1099 (fontified t) 1099 1100 (fontified t face (rainbow-delimiters-depth-3-face)) 1100 1101 (fontified t face (rainbow-delimiters-depth-4-face)) 1101 1106 (fontified t) 1106 1107 (fontified t face (rainbow-delimiters-depth-4-face)) 1107 1110 (fontified t) 1110 1111 (fontified t face (rainbow-delimiters-depth-4-face)) 1111 1117 (fontified t face font-lock-keyword-face) 1117 1118 (fontified t) 1118 1119 (fontified t face (rainbow-delimiters-depth-5-face)) 1119 1126 (fontified t) 1126 1127 (fontified t face (rainbow-delimiters-depth-5-face)) 1127 1135 (fontified t) 1135 1136 (fontified t face (rainbow-delimiters-depth-5-face)) 1136 1147 (fontified t face font-lock-keyword-face) 1147 1148 (fontified t) 1148 1149 (fontified t face (rainbow-delimiters-depth-6-face)) 1149 1154 (fontified t) 1154 1155 (fontified t face (rainbow-delimiters-depth-7-face)) 1155 1174 (fontified t) 1174 1178 (fontified t face font-lock-string-face) 1178 1179 (fontified t face (rainbow-delimiters-depth-7-face)) 1179 1180 (fontified t face (rainbow-delimiters-depth-6-face)) 1180 1181 (fontified t face (rainbow-delimiters-depth-5-face)) 1181 1189 (fontified t) 1189 1190 (fontified t face (rainbow-delimiters-depth-5-face)) 1190 1237 (fontified t) 1237 1238 (fontified t face (rainbow-delimiters-depth-5-face)) 1238 1239 (fontified t face (rainbow-delimiters-depth-4-face)) 1239 1240 (fontified t face (rainbow-delimiters-depth-3-face)) 1240 1249 (fontified t) 1249 1252 (fontified t face font-lock-comment-delimiter-face) 1252 1305 (fontified t face font-lock-comment-face) 1305 1313 (fontified t) 1313 1314 (fontified t face (rainbow-delimiters-depth-3-face)) 1314 1315 (fontified t face (rainbow-delimiters-depth-4-face)) 1315 1319 (fontified t) 1319 1320 (fontified t face (rainbow-delimiters-depth-4-face)) 1320 1323 (fontified t) 1323 1324 (fontified t face (rainbow-delimiters-depth-4-face)) 1324 1330 (fontified t face font-lock-keyword-face) 1330 1331 (fontified t) 1331 1332 (fontified t face (rainbow-delimiters-depth-5-face)) 1332 1333 (fontified t face (rainbow-delimiters-depth-5-face)) 1333 1340 (fontified t) 1340 1341 (fontified t face (rainbow-delimiters-depth-5-face)) 1341 1352 (fontified t face font-lock-keyword-face) 1352 1353 (fontified t face (rainbow-delimiters-depth-5-face)) 1353 1360 (fontified t) 1360 1361 (fontified t face (rainbow-delimiters-depth-5-face)) 1361 1375 (fontified t) 1375 1377 (fontified t face font-lock-string-face) 1377 1382 (fontified t) 1382 1398 (fontified t face font-lock-string-face) 1398 1399 (fontified t face (rainbow-delimiters-depth-5-face)) 1399 1400 (fontified t face (rainbow-delimiters-depth-4-face)) 1400 1401 (fontified t face (rainbow-delimiters-depth-3-face)) 1401 1402 (fontified t face (rainbow-delimiters-depth-2-face)) 1402 1403 (fontified t face (rainbow-delimiters-depth-1-face)) 1403 1405 (fontified t) 1405 1406 (fontified t face (rainbow-delimiters-depth-1-face)) 1406 1417 (fontified t) 1417 1418 (fontified t face (rainbow-delimiters-depth-1-face)) 1418 1420 (fontified t) 1420 1422 (fontified t face font-lock-comment-delimiter-face) 1422 1433 (fontified t face font-lock-comment-face) 1433 1444 (fontified t face font-lock-comment-face) 1444 1446 (fontified t) 1446 1449 (fontified t face font-lock-comment-delimiter-face) 1449 1496 (fontified t face font-lock-comment-face) 1496 1497 (fontified t face (rainbow-delimiters-depth-1-face)) 1497 1501 (fontified t face font-lock-keyword-face) 1501 1529 (fontified t) 1529 1530 (fontified t face (rainbow-delimiters-depth-2-face)) 1530 1606 (fontified t) 1606 1609 (fontified t face font-lock-comment-delimiter-face) 1609 1621 (fontified t face font-lock-comment-face) 1621 1636 (fontified t) 1636 1639 (fontified t face font-lock-comment-delimiter-face) 1639 1652 (fontified t face font-lock-comment-face) 1652 1667 (fontified t) 1667 1670 (fontified t face font-lock-comment-delimiter-face) 1670 1681 (fontified t face font-lock-comment-face) 1681 1692 (fontified t) 1692 1693 (fontified t face (rainbow-delimiters-depth-2-face)) 1693 1694 (fontified t face (rainbow-delimiters-depth-1-face)) 1694 1698 (fontified t) 1698 1701 (fontified t face font-lock-comment-delimiter-face) 1701 1753 (fontified t face font-lock-comment-face) 1753 1755 (fontified t) 1755 1756 (fontified t face (rainbow-delimiters-depth-1-face)) 1756 1781 (fontified t) 1781 1782 (fontified t face (rainbow-delimiters-depth-2-face)) 1782 1787 (fontified t) 1787 1788 (fontified t face (rainbow-delimiters-depth-2-face)) 1788 1814 (fontified t) 1814 1815 (fontified t face (rainbow-delimiters-depth-1-face))) #(" 
" 0 2 (fontified t)) #(" 
;; EXWM
(use-package exwm
  :init
  (setq mouse-autoselect-window nil))

;; Fix problem with ido
(require 'exwm-config)
(exwm-config-ido)

;; Set the initial number of workspace
(setq exwm-workspace-number 4)

(add-hook 'exwm-update-class-hook
          (lambda ()
            (exwm-workspace-rename-buffer exwm-class-name)))

;; Global keybindings can be defined with `exwm-input-global-keys'.
;; Here are a few examples:
(setq exwm-input-global-keys
      `(
        ;; Bind \"s-r\" to exit char-mode and fullscreen mode.
        ([?\\s-r] . exwm-reset)
        ;; Bind \"s-w\" to switch workspace interactively.
        ([?\\s-w] . exwm-workspace-switch)
        ;; Bind \"s-0\" to \"s-9\" to switch to a workspace by its index.
        ,@(mapcar (lambda (i)
                    `(,(kbd (format \"s-%d\" i)) .
                      (lambda ()
                        (interactive)
                        (exwm-workspace-switch-create ,i))))
                  (number-sequence 0 9))
        ;; Bind \"s-&\" to launch applications ('M-&' also works if the output
        ;; buffer does not bother you).
        ([?\\s-&] . (lambda (command)
		     (interactive (list (read-shell-command \"$ \")))
		     (start-process-shell-command command nil command)))
        ;; Bind \"s-<f2>\" to \"slock\", a simple X display locker.
        ([s-f2] . (lambda ()
		    (interactive)
		    (start-process \"\" nil \"/usr/bin/slock\")))))

(exwm-enable)

;;(when dw/exwm-enabled
  ;; These keys should always pass through to Emacs
(setq exwm-input-prefix-keys
   '(?\\C-x
     ?\\C-h
     ?\\M-x
     ?\\M-`
     ?\\M-&
     ?\\M-:
     ?\\C-\\M-j  ;; Buffer list
     ?\\C-\\M-k  ;; Browser list
     ?\\C-\\     ;; Ctrl+Space
     ?\\C-\\;))

  ;; Ctrl+Q will enable the next key to be sent directly
(define-key exwm-mode-map [?\\C-q] 'exwm-input-send-next-key)
" 0 2 (fontified t) 2 5 (face font-lock-comment-delimiter-face fontified t) 5 10 (face font-lock-comment-face fontified t) 10 11 (face (rainbow-delimiters-depth-2-face) fontified t) 11 22 (face font-lock-keyword-face fontified t) 22 23 (fontified t) 23 27 (face font-lock-constant-face fontified t) 27 30 (fontified t) 30 35 (face font-lock-builtin-face fontified t) 35 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-3-face) fontified t) 39 43 (face font-lock-keyword-face fontified t) 43 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-3-face) fontified t) 72 73 (face (rainbow-delimiters-depth-2-face) fontified t) 73 75 (fontified t) 75 78 (face font-lock-comment-delimiter-face fontified t) 78 99 (face font-lock-comment-face fontified t) 99 100 (face (rainbow-delimiters-depth-2-face) fontified t) 100 107 (face font-lock-keyword-face fontified t) 107 109 (fontified t) 109 120 (face font-lock-constant-face fontified t) 120 121 (face (rainbow-delimiters-depth-2-face) fontified t) 121 122 (fontified t) 122 123 (face (rainbow-delimiters-depth-2-face) fontified t) 123 138 (fontified t) 138 139 (face (rainbow-delimiters-depth-2-face) fontified t) 139 141 (fontified t) 141 144 (face font-lock-comment-delimiter-face fontified t) 144 180 (face font-lock-comment-face fontified t) 180 181 (face (rainbow-delimiters-depth-2-face) fontified t) 181 185 (face font-lock-keyword-face fontified t) 185 209 (fontified t) 209 210 (face (rainbow-delimiters-depth-2-face) fontified t) 210 212 (fontified t) 212 213 (face (rainbow-delimiters-depth-2-face) fontified t) 213 237 (fontified t) 237 246 (fontified t) 246 256 (fontified t) 256 257 (face (rainbow-delimiters-depth-3-face) fontified t) 257 263 (face font-lock-keyword-face fontified t) 263 264 (fontified t) 264 265 (face (rainbow-delimiters-depth-4-face) fontified t) 265 266 (face (rainbow-delimiters-depth-4-face) fontified t) 266 279 (fontified t) 279 280 (face (rainbow-delimiters-depth-4-face) fontified t) 280 324 (fontified t) 324 325 (face (rainbow-delimiters-depth-4-face) fontified t) 325 326 (face (rainbow-delimiters-depth-3-face) fontified t) 326 327 (face (rainbow-delimiters-depth-2-face) fontified t) 327 329 (fontified t) 329 332 (face font-lock-comment-delimiter-face fontified t) 332 372 (face font-lock-comment-face fontified t) 372 394 (face (font-lock-constant-face font-lock-comment-face) fontified t) 394 397 (face font-lock-comment-face fontified t) 397 400 (face font-lock-comment-delimiter-face fontified t) 400 425 (face font-lock-comment-face fontified t) 425 426 (face (rainbow-delimiters-depth-2-face) fontified t) 426 430 (face font-lock-keyword-face fontified t) 430 461 (fontified t) 461 462 (face (rainbow-delimiters-depth-3-face) fontified t) 462 471 (fontified t) 471 474 (face font-lock-comment-delimiter-face fontified t) 474 524 (face font-lock-comment-face fontified t) 524 532 (fontified t) 532 533 (face (rainbow-delimiters-depth-4-face) fontified t) 533 534 (face (rainbow-delimiters-depth-5-face) fontified t) 534 539 (fontified t) 539 540 (face (rainbow-delimiters-depth-5-face) fontified t) 540 553 (fontified t) 553 554 (face (rainbow-delimiters-depth-4-face) fontified t) 554 563 (fontified t) 563 566 (face font-lock-comment-delimiter-face fontified t) 566 612 (face font-lock-comment-face fontified t) 612 620 (fontified t) 620 621 (face (rainbow-delimiters-depth-4-face) fontified t) 621 622 (face (rainbow-delimiters-depth-5-face) fontified t) 622 627 (fontified t) 627 628 (face (rainbow-delimiters-depth-5-face) fontified t) 628 652 (fontified t) 652 653 (face (rainbow-delimiters-depth-4-face) fontified t) 653 662 (fontified t) 662 665 (face font-lock-comment-delimiter-face fontified t) 665 724 (face font-lock-comment-face fontified t) 724 734 (fontified t) 734 735 (face (rainbow-delimiters-depth-4-face) fontified t) 735 742 (fontified t) 742 743 (face (rainbow-delimiters-depth-5-face) fontified t) 743 746 (face font-lock-keyword-face fontified t) 746 749 (face font-lock-keyword-face fontified t) 749 750 (fontified t) 750 751 (face (rainbow-delimiters-depth-6-face) fontified t) 751 752 (fontified t) 752 753 (face (rainbow-delimiters-depth-6-face) fontified t) 753 754 (fontified t) 754 775 (fontified t) 775 776 (face (rainbow-delimiters-depth-6-face) fontified t) 776 777 (fontified t) 777 778 (face (rainbow-delimiters-depth-7-face) fontified t) 778 782 (fontified t) 782 783 (face (rainbow-delimiters-depth-8-face) fontified t) 783 790 (fontified t) 790 796 (face font-lock-string-face fontified t) 796 798 (fontified t) 798 799 (face (rainbow-delimiters-depth-8-face) fontified t) 799 800 (face (rainbow-delimiters-depth-7-face) fontified t) 800 825 (fontified t) 825 826 (face (rainbow-delimiters-depth-7-face) fontified t) 826 832 (face font-lock-keyword-face fontified t) 832 833 (fontified t) 833 834 (face (rainbow-delimiters-depth-8-face) fontified t) 834 835 (face (rainbow-delimiters-depth-8-face) fontified t) 835 860 (fontified t) 860 861 (face (rainbow-delimiters-depth-8-face) fontified t) 861 872 (face font-lock-keyword-face fontified t) 872 873 (face (rainbow-delimiters-depth-8-face) fontified t) 873 898 (fontified t) 898 899 (face (rainbow-delimiters-depth-8-face) fontified t) 899 930 (fontified t) 930 931 (face (rainbow-delimiters-depth-8-face) fontified t) 931 932 (face (rainbow-delimiters-depth-7-face) fontified t) 932 933 (face (rainbow-delimiters-depth-6-face) fontified t) 933 934 (face (rainbow-delimiters-depth-5-face) fontified t) 934 953 (fontified t) 953 954 (face (rainbow-delimiters-depth-5-face) fontified t) 954 973 (fontified t) 973 974 (face (rainbow-delimiters-depth-5-face) fontified t) 974 975 (face (rainbow-delimiters-depth-4-face) fontified t) 975 984 (fontified t) 984 987 (face font-lock-comment-delimiter-face fontified t) 987 1053 (face font-lock-comment-face fontified t) 1053 1061 (fontified t) 1061 1064 (face font-lock-comment-delimiter-face fontified t) 1064 1093 (face font-lock-comment-face fontified t) 1093 1101 (fontified t) 1101 1102 (face (rainbow-delimiters-depth-4-face) fontified t) 1102 1103 (face (rainbow-delimiters-depth-5-face) fontified t) 1103 1108 (fontified t) 1108 1109 (face (rainbow-delimiters-depth-5-face) fontified t) 1109 1112 (fontified t) 1112 1113 (face (rainbow-delimiters-depth-5-face) fontified t) 1113 1119 (face font-lock-keyword-face fontified t) 1119 1120 (fontified t) 1120 1121 (face (rainbow-delimiters-depth-6-face) fontified t) 1121 1128 (fontified t) 1128 1129 (face (rainbow-delimiters-depth-6-face) fontified t) 1129 1137 (fontified t) 1137 1138 (face (rainbow-delimiters-depth-6-face) fontified t) 1138 1149 (face font-lock-keyword-face fontified t) 1149 1150 (fontified t) 1150 1151 (face (rainbow-delimiters-depth-7-face) fontified t) 1151 1156 (fontified t) 1156 1157 (face (rainbow-delimiters-depth-8-face) fontified t) 1157 1176 (fontified t) 1176 1180 (face font-lock-string-face fontified t) 1180 1181 (face (rainbow-delimiters-depth-8-face) fontified t) 1181 1182 (face (rainbow-delimiters-depth-7-face) fontified t) 1182 1183 (face (rainbow-delimiters-depth-6-face) fontified t) 1183 1191 (fontified t) 1191 1192 (face (rainbow-delimiters-depth-6-face) fontified t) 1192 1239 (fontified t) 1239 1240 (face (rainbow-delimiters-depth-6-face) fontified t) 1240 1241 (face (rainbow-delimiters-depth-5-face) fontified t) 1241 1242 (face (rainbow-delimiters-depth-4-face) fontified t) 1242 1251 (fontified t) 1251 1254 (face font-lock-comment-delimiter-face fontified t) 1254 1307 (face font-lock-comment-face fontified t) 1307 1315 (fontified t) 1315 1316 (face (rainbow-delimiters-depth-4-face) fontified t) 1316 1317 (face (rainbow-delimiters-depth-5-face) fontified t) 1317 1321 (fontified t) 1321 1322 (face (rainbow-delimiters-depth-5-face) fontified t) 1322 1325 (fontified t) 1325 1326 (face (rainbow-delimiters-depth-5-face) fontified t) 1326 1332 (face font-lock-keyword-face fontified t) 1332 1333 (fontified t) 1333 1334 (face (rainbow-delimiters-depth-6-face) fontified t) 1334 1335 (face (rainbow-delimiters-depth-6-face) fontified t) 1335 1342 (fontified t) 1342 1343 (face (rainbow-delimiters-depth-6-face) fontified t) 1343 1354 (face font-lock-keyword-face fontified t) 1354 1355 (face (rainbow-delimiters-depth-6-face) fontified t) 1355 1362 (fontified t) 1362 1363 (face (rainbow-delimiters-depth-6-face) fontified t) 1363 1377 (fontified t) 1377 1379 (face font-lock-string-face fontified t) 1379 1384 (fontified t) 1384 1400 (face font-lock-string-face fontified t) 1400 1401 (face (rainbow-delimiters-depth-6-face) fontified t) 1401 1402 (face (rainbow-delimiters-depth-5-face) fontified t) 1402 1403 (face (rainbow-delimiters-depth-4-face) fontified t) 1403 1404 (face (rainbow-delimiters-depth-3-face) fontified t) 1404 1405 (face (rainbow-delimiters-depth-2-face) fontified t) 1405 1407 (fontified t) 1407 1408 (face (rainbow-delimiters-depth-2-face) fontified t) 1408 1419 (fontified t) 1419 1420 (face (rainbow-delimiters-depth-2-face) fontified t) 1420 1422 (fontified t) 1422 1424 (face font-lock-comment-delimiter-face fontified t) 1424 1446 (face font-lock-comment-face fontified t) 1446 1448 (fontified t) 1448 1451 (face font-lock-comment-delimiter-face fontified t) 1451 1498 (face font-lock-comment-face fontified t) 1498 1499 (face (rainbow-delimiters-depth-2-face) fontified t) 1499 1503 (face font-lock-keyword-face fontified t) 1503 1531 (fontified t) 1531 1532 (face (rainbow-delimiters-depth-3-face) fontified t) 1532 1608 (fontified t) 1608 1611 (face font-lock-comment-delimiter-face fontified t) 1611 1623 (face font-lock-comment-face fontified t) 1623 1638 (fontified t) 1638 1641 (face font-lock-comment-delimiter-face fontified t) 1641 1654 (face font-lock-comment-face fontified t) 1654 1669 (fontified t) 1669 1672 (face font-lock-comment-delimiter-face fontified t) 1672 1683 (face font-lock-comment-face fontified t) 1683 1694 (fontified t) 1694 1695 (face (rainbow-delimiters-depth-3-face) fontified t) 1695 1696 (face (rainbow-delimiters-depth-2-face) fontified t) 1696 1700 (fontified t) 1700 1703 (face font-lock-comment-delimiter-face fontified t) 1703 1755 (face font-lock-comment-face fontified t) 1755 1756 (face (rainbow-delimiters-depth-2-face) fontified t) 1756 1781 (fontified t) 1781 1782 (face (rainbow-delimiters-depth-3-face) fontified t) 1782 1787 (fontified t) 1787 1788 (face (rainbow-delimiters-depth-3-face) fontified t) 1788 1807 (fontified t) 1807 1814 (fontified t) 1814 1815 (face (rainbow-delimiters-depth-2-face) fontified t) 1815 1816 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   '(xah-fly-keys which-key wakatime-mode use-package undo-tree solarized-theme rust-mode rainbow-delimiters org-bullets monokai-theme magit ivy-rich helpful guide-key gruvbox-theme fill-column-indicator exwm exotica-theme engine-mode counsel auto-complete)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
" 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t face font-lock-comment-delimiter-face) 5 47 (fontified t face font-lock-comment-face) 47 48 (fontified t) 48 51 (fontified t face font-lock-comment-delimiter-face) 51 112 (fontified t face font-lock-comment-face) 112 113 (fontified t) 113 116 (fontified t face font-lock-comment-delimiter-face) 116 170 (fontified t face font-lock-comment-face) 170 171 (fontified t) 171 174 (fontified t face font-lock-comment-delimiter-face) 174 224 (fontified t face font-lock-comment-face) 224 226 (fontified t) 226 227 (fontified t face (rainbow-delimiters-depth-2-face)) 227 257 (fontified t) 257 258 (fontified t face (rainbow-delimiters-depth-3-face)) 258 337 (fontified t) 337 477 (fontified t) 477 501 (fontified t) 501 509 (fontified t) 509 510 (face (rainbow-delimiters-depth-3-face) fontified t) 510 511 (face (rainbow-delimiters-depth-2-face) fontified t) 511 512 (face (rainbow-delimiters-depth-1-face) fontified t) 512 513 (fontified t) 513 514 (fontified t face (rainbow-delimiters-depth-1-face)) 514 532 (fontified t) 532 535 (fontified t face font-lock-comment-delimiter-face) 535 573 (fontified t face font-lock-comment-face) 573 574 (fontified t) 574 577 (fontified t face font-lock-comment-delimiter-face) 577 638 (fontified t face font-lock-comment-face) 638 639 (fontified t) 639 642 (fontified t face font-lock-comment-delimiter-face) 642 696 (fontified t face font-lock-comment-face) 696 697 (fontified t) 697 700 (fontified t face font-lock-comment-delimiter-face) 700 750 (fontified t face font-lock-comment-face) 750 751 (fontified t) 751 752 (fontified t face (rainbow-delimiters-depth-1-face)) 752 753 (fontified t)) #("
;; EXWM
(use-package exwm
  :init
  (setq mouse-autoselect-window nil))

;; Fix problem with ido
(require 'exwm-config)
(exwm-config-ido)

;; Set the initial number of workspace
(setq exwm-workspace-number 4)

(add-hook 'exwm-update-class-hook
          (lambda ()
            (exwm-workspace-rename-buffer exwm-class-name)))

;; Global keybindings can be defined with `exwm-input-global-keys'.
;; Here are a few examples:
(setq exwm-input-global-keys
      `(
        ;; Bind \"s-r\" to exit char-mode and fullscreen mode.
        ([?\\s-r] . exwm-reset)
        ;; Bind \"s-w\" to switch workspace interactively.
        ([?\\s-w] . exwm-workspace-switch)
        ;; Bind \"s-0\" to \"s-9\" to switch to a workspace by its index.
        ,@(mapcar (lambda (i)
                    `(,(kbd (format \"s-%d\" i)) .
                      (lambda ()
                        (interactive)
                        (exwm-workspace-switch-create ,i))))
                  (number-sequence 0 9))
        ;; Bind \"s-&\" to launch applications ('M-&' also works if the output
        ;; buffer does not bother you).
        ([?\\s-&] . (lambda (command)
		     (interactive (list (read-shell-command \"$ \")))
		     (start-process-shell-command command nil command)))
        ;; Bind \"s-<f2>\" to \"slock\", a simple X display locker.
        ([s-f2] . (lambda ()
		    (interactive)
		    (start-process \"\" nil \"/usr/bin/slock\")))))

(exwm-enable)

;;(when dw/exwm-enabled
  ;; These keys should always pass through to Emacs
(setq exwm-input-prefix-keys
   '(?\\C-x
     ?\\C-h
     ?\\M-x
     ?\\M-`
     ?\\M-&
     ?\\M-:
     ?\\C-\\M-j  ;; Buffer list
     ?\\C-\\M-k  ;; Browser list
     ?\\C-\\     ;; Ctrl+Space
     ?\\C-\\;))

  ;; Ctrl+Q will enable the next key to be sent directly
  (define-key exwm-mode-map [?\\C-q] 'exwm-input-send-next-key)" 0 1 (fontified t) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face (rainbow-delimiters-depth-1-face)) 10 21 (fontified t face font-lock-keyword-face) 21 22 (fontified t) 22 26 (fontified t face font-lock-constant-face) 26 29 (fontified t) 29 34 (fontified t face font-lock-builtin-face) 34 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 42 (fontified t face font-lock-keyword-face) 42 70 (fontified t) 70 71 (fontified t face (rainbow-delimiters-depth-2-face)) 71 72 (fontified t face (rainbow-delimiters-depth-1-face)) 72 74 (fontified t) 74 77 (fontified t face font-lock-comment-delimiter-face) 77 98 (fontified t face font-lock-comment-face) 98 99 (fontified t face (rainbow-delimiters-depth-1-face)) 99 106 (fontified t face font-lock-keyword-face) 106 108 (fontified t) 108 119 (fontified t face font-lock-constant-face) 119 120 (fontified t face (rainbow-delimiters-depth-1-face)) 120 121 (fontified t) 121 122 (fontified t face (rainbow-delimiters-depth-1-face)) 122 137 (fontified t) 137 138 (fontified t face (rainbow-delimiters-depth-1-face)) 138 140 (fontified t) 140 143 (fontified t face font-lock-comment-delimiter-face) 143 179 (fontified t face font-lock-comment-face) 179 180 (fontified t face (rainbow-delimiters-depth-1-face)) 180 184 (fontified t face font-lock-keyword-face) 184 208 (fontified t) 208 209 (fontified t face (rainbow-delimiters-depth-1-face)) 209 211 (fontified t) 211 212 (fontified t face (rainbow-delimiters-depth-1-face)) 212 232 (fontified t) 232 245 (fontified t) 245 255 (fontified t) 255 256 (fontified t face (rainbow-delimiters-depth-2-face)) 256 262 (fontified t face font-lock-keyword-face) 262 263 (fontified t) 263 264 (fontified t face (rainbow-delimiters-depth-3-face)) 264 265 (fontified t face (rainbow-delimiters-depth-3-face)) 265 278 (fontified t) 278 279 (fontified t face (rainbow-delimiters-depth-3-face)) 279 323 (fontified t) 323 324 (fontified t face (rainbow-delimiters-depth-3-face)) 324 325 (fontified t face (rainbow-delimiters-depth-2-face)) 325 326 (fontified t face (rainbow-delimiters-depth-1-face)) 326 328 (fontified t) 328 331 (fontified t face font-lock-comment-delimiter-face) 331 371 (fontified t face font-lock-comment-face) 371 393 (fontified t face (font-lock-constant-face font-lock-comment-face)) 393 396 (fontified t face font-lock-comment-face) 396 399 (fontified t face font-lock-comment-delimiter-face) 399 424 (fontified t face font-lock-comment-face) 424 425 (fontified t face (rainbow-delimiters-depth-1-face)) 425 429 (fontified t face font-lock-keyword-face) 429 460 (fontified t) 460 461 (fontified t face (rainbow-delimiters-depth-2-face)) 461 470 (fontified t) 470 473 (fontified t face font-lock-comment-delimiter-face) 473 523 (fontified t face font-lock-comment-face) 523 531 (fontified t) 531 532 (fontified t face (rainbow-delimiters-depth-3-face)) 532 533 (fontified t face (rainbow-delimiters-depth-4-face)) 533 538 (fontified t) 538 539 (fontified t face (rainbow-delimiters-depth-4-face)) 539 552 (fontified t) 552 553 (fontified t face (rainbow-delimiters-depth-3-face)) 553 562 (fontified t) 562 565 (fontified t face font-lock-comment-delimiter-face) 565 611 (fontified t face font-lock-comment-face) 611 619 (fontified t) 619 620 (fontified t face (rainbow-delimiters-depth-3-face)) 620 621 (fontified t face (rainbow-delimiters-depth-4-face)) 621 626 (fontified t) 626 627 (fontified t face (rainbow-delimiters-depth-4-face)) 627 651 (fontified t) 651 652 (fontified t face (rainbow-delimiters-depth-3-face)) 652 661 (fontified t) 661 664 (fontified t face font-lock-comment-delimiter-face) 664 723 (fontified t face font-lock-comment-face) 723 733 (fontified t) 733 734 (fontified t face (rainbow-delimiters-depth-3-face)) 734 741 (fontified t) 741 742 (fontified t face (rainbow-delimiters-depth-4-face)) 742 745 (fontified t face font-lock-keyword-face) 745 748 (fontified t face font-lock-keyword-face) 748 749 (fontified t) 749 750 (fontified t face (rainbow-delimiters-depth-5-face)) 750 751 (fontified t) 751 752 (fontified t face (rainbow-delimiters-depth-5-face)) 752 753 (fontified t) 753 774 (fontified t) 774 775 (fontified t face (rainbow-delimiters-depth-5-face)) 775 776 (fontified t) 776 777 (fontified t face (rainbow-delimiters-depth-6-face)) 777 781 (fontified t) 781 782 (fontified t face (rainbow-delimiters-depth-7-face)) 782 789 (fontified t) 789 795 (fontified t face font-lock-string-face) 795 797 (fontified t) 797 798 (fontified t face (rainbow-delimiters-depth-7-face)) 798 799 (fontified t face (rainbow-delimiters-depth-6-face)) 799 824 (fontified t) 824 825 (fontified t face (rainbow-delimiters-depth-6-face)) 825 831 (fontified t face font-lock-keyword-face) 831 832 (fontified t) 832 833 (fontified t face (rainbow-delimiters-depth-7-face)) 833 834 (fontified t face (rainbow-delimiters-depth-7-face)) 834 859 (fontified t) 859 860 (fontified t face (rainbow-delimiters-depth-7-face)) 860 871 (fontified t face font-lock-keyword-face) 871 872 (fontified t face (rainbow-delimiters-depth-7-face)) 872 897 (fontified t) 897 898 (fontified t face (rainbow-delimiters-depth-7-face)) 898 929 (fontified t) 929 930 (fontified t face (rainbow-delimiters-depth-7-face)) 930 931 (fontified t face (rainbow-delimiters-depth-6-face)) 931 932 (fontified t face (rainbow-delimiters-depth-5-face)) 932 933 (fontified t face (rainbow-delimiters-depth-4-face)) 933 952 (fontified t) 952 953 (fontified t face (rainbow-delimiters-depth-4-face)) 953 972 (fontified t) 972 973 (fontified t face (rainbow-delimiters-depth-4-face)) 973 974 (fontified t face (rainbow-delimiters-depth-3-face)) 974 983 (fontified t) 983 986 (fontified t face font-lock-comment-delimiter-face) 986 1052 (fontified t face font-lock-comment-face) 1052 1060 (fontified t) 1060 1063 (fontified t face font-lock-comment-delimiter-face) 1063 1092 (fontified t face font-lock-comment-face) 1092 1100 (fontified t) 1100 1101 (fontified t face (rainbow-delimiters-depth-3-face)) 1101 1102 (fontified t face (rainbow-delimiters-depth-4-face)) 1102 1107 (fontified t) 1107 1108 (fontified t face (rainbow-delimiters-depth-4-face)) 1108 1111 (fontified t) 1111 1112 (fontified t face (rainbow-delimiters-depth-4-face)) 1112 1118 (fontified t face font-lock-keyword-face) 1118 1119 (fontified t) 1119 1120 (fontified t face (rainbow-delimiters-depth-5-face)) 1120 1127 (fontified t) 1127 1128 (fontified t face (rainbow-delimiters-depth-5-face)) 1128 1136 (fontified t) 1136 1137 (fontified t face (rainbow-delimiters-depth-5-face)) 1137 1148 (fontified t face font-lock-keyword-face) 1148 1149 (fontified t) 1149 1150 (fontified t face (rainbow-delimiters-depth-6-face)) 1150 1155 (fontified t) 1155 1156 (fontified t face (rainbow-delimiters-depth-7-face)) 1156 1175 (fontified t) 1175 1179 (fontified t face font-lock-string-face) 1179 1180 (fontified t face (rainbow-delimiters-depth-7-face)) 1180 1181 (fontified t face (rainbow-delimiters-depth-6-face)) 1181 1182 (fontified t face (rainbow-delimiters-depth-5-face)) 1182 1190 (fontified t) 1190 1191 (fontified t face (rainbow-delimiters-depth-5-face)) 1191 1238 (fontified t) 1238 1239 (fontified t face (rainbow-delimiters-depth-5-face)) 1239 1240 (fontified t face (rainbow-delimiters-depth-4-face)) 1240 1241 (fontified t face (rainbow-delimiters-depth-3-face)) 1241 1250 (fontified t) 1250 1253 (fontified t face font-lock-comment-delimiter-face) 1253 1306 (fontified t face font-lock-comment-face) 1306 1314 (fontified t) 1314 1315 (fontified t face (rainbow-delimiters-depth-3-face)) 1315 1316 (fontified t face (rainbow-delimiters-depth-4-face)) 1316 1320 (fontified t) 1320 1321 (fontified t face (rainbow-delimiters-depth-4-face)) 1321 1324 (fontified t) 1324 1325 (fontified t face (rainbow-delimiters-depth-4-face)) 1325 1331 (fontified t face font-lock-keyword-face) 1331 1332 (fontified t) 1332 1333 (fontified t face (rainbow-delimiters-depth-5-face)) 1333 1334 (fontified t face (rainbow-delimiters-depth-5-face)) 1334 1341 (fontified t) 1341 1342 (fontified t face (rainbow-delimiters-depth-5-face)) 1342 1353 (fontified t face font-lock-keyword-face) 1353 1354 (fontified t face (rainbow-delimiters-depth-5-face)) 1354 1361 (fontified t) 1361 1362 (fontified t face (rainbow-delimiters-depth-5-face)) 1362 1376 (fontified t) 1376 1378 (fontified t face font-lock-string-face) 1378 1383 (fontified t) 1383 1399 (fontified t face font-lock-string-face) 1399 1400 (fontified t face (rainbow-delimiters-depth-5-face)) 1400 1401 (fontified t face (rainbow-delimiters-depth-4-face)) 1401 1402 (fontified t face (rainbow-delimiters-depth-3-face)) 1402 1403 (fontified t face (rainbow-delimiters-depth-2-face)) 1403 1404 (fontified t face (rainbow-delimiters-depth-1-face)) 1404 1406 (fontified t) 1406 1407 (fontified t face (rainbow-delimiters-depth-1-face)) 1407 1418 (fontified t) 1418 1419 (fontified t face (rainbow-delimiters-depth-1-face)) 1419 1420 (fontified t) 1420 1421 (fontified t) 1421 1423 (fontified t face font-lock-comment-delimiter-face) 1423 1445 (fontified t face font-lock-comment-face) 1445 1447 (fontified t) 1447 1450 (fontified t face font-lock-comment-delimiter-face) 1450 1497 (fontified t face font-lock-comment-face) 1497 1498 (fontified t face (rainbow-delimiters-depth-1-face)) 1498 1502 (fontified t face font-lock-keyword-face) 1502 1530 (fontified t) 1530 1531 (fontified t face (rainbow-delimiters-depth-2-face)) 1531 1607 (fontified t) 1607 1610 (fontified t face font-lock-comment-delimiter-face) 1610 1622 (fontified t face font-lock-comment-face) 1622 1637 (fontified t) 1637 1640 (fontified t face font-lock-comment-delimiter-face) 1640 1653 (fontified t face font-lock-comment-face) 1653 1668 (fontified t) 1668 1671 (fontified t face font-lock-comment-delimiter-face) 1671 1682 (fontified t face font-lock-comment-face) 1682 1693 (fontified t) 1693 1694 (fontified t face (rainbow-delimiters-depth-2-face)) 1694 1695 (fontified t face (rainbow-delimiters-depth-1-face)) 1695 1699 (fontified t) 1699 1702 (fontified t face font-lock-comment-delimiter-face) 1702 1754 (fontified t face font-lock-comment-face) 1754 1756 (fontified t) 1756 1757 (fontified t face (rainbow-delimiters-depth-1-face)) 1757 1782 (fontified t) 1782 1783 (fontified t face (rainbow-delimiters-depth-2-face)) 1783 1788 (fontified t) 1788 1789 (fontified t face (rainbow-delimiters-depth-2-face)) 1789 1815 (fontified t) 1815 1816 (fontified t face (rainbow-delimiters-depth-1-face))) #(";; (ac-config-default)
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 23 (fontified t face font-lock-comment-face)) #("(define-key key-translation-map (kbd \"ESC\") (kbd \"C-g\")
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 37 (fontified t) 37 40 (fontified t face font-lock-string-face) 40 42 (fontified t face font-lock-string-face) 42 43 (fontified t face (rainbow-delimiters-depth-2-face)) 43 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-2-face)) 45 49 (fontified t) 49 54 (fontified t face font-lock-string-face) 54 55 (fontified t face (rainbow-delimiters-depth-2-face)) 55 56 (fontified t)) #("
" 0 1 (fontified t)) #("(setq xah-fly-use-control-key nil)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face))) #("  :init" 0 2 (fontified t) 2 7 (face font-lock-builtin-face fontified t)) #("  :init (setq xah-fly-use-meta-key nil)
" 0 2 (fontified t) 2 7 (face font-lock-builtin-face fontified t) 7 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-2-face) fontified t) 9 13 (face font-lock-keyword-face fontified t) 13 17 (fontified t) 17 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 40 (fontified t)) #("(setq xah-fly-use-control-key nil)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t) 34 35 (fontified t)) #("
" 0 1 (fontified t)) #("(use-package xah-fly-keys
  :init (setq xah-fly-use-meta-key nil)
  :config
  ;; (xah-fly-keys-set-layout \"colemak\"))
  (xah-fly-keys-set-layout \"dvorak\")
  )" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 25 (fontified t face font-lock-constant-face) 25 28 (fontified t) 28 33 (fontified t face font-lock-builtin-face) 33 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-2-face)) 35 39 (fontified t face font-lock-keyword-face) 39 43 (fontified t) 43 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-2-face)) 65 66 (fontified t) 66 68 (fontified t) 68 75 (fontified t face font-lock-builtin-face) 75 78 (fontified t) 78 81 (fontified t face font-lock-comment-delimiter-face) 81 118 (fontified t face font-lock-comment-face) 118 120 (fontified t) 120 121 (fontified t face (rainbow-delimiters-depth-2-face)) 121 145 (fontified t) 145 153 (fontified t face font-lock-string-face) 153 154 (fontified t face (rainbow-delimiters-depth-2-face)) 154 155 (fontified t) 155 157 (fontified t) 157 158 (fontified t face (rainbow-delimiters-depth-1-face))) #("(setq xah-fly-use-control-key nil)
  (define-key xah-fly-key-map (kbd \"<end>\") 'xah-fly-insert-mode-activate)
  (define-key key-translation-map (kbd \"ESC\") (kbd \"C-g\")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 5 (fontified t face font-lock-keyword-face) 5 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-2-face)) 34 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 65 (fontified t) 65 66 (fontified t face (rainbow-delimiters-depth-3-face)) 66 70 (fontified t) 70 77 (fontified t face font-lock-string-face) 77 78 (fontified t face (rainbow-delimiters-depth-3-face)) 78 108 (fontified t) 108 109 (fontified t face (rainbow-delimiters-depth-2-face)) 109 112 (fontified t) 112 113 (fontified t face (rainbow-delimiters-depth-2-face)) 113 144 (fontified t) 144 145 (fontified t face (rainbow-delimiters-depth-3-face)) 145 149 (fontified t) 149 154 (fontified t face font-lock-string-face) 154 155 (fontified t face (rainbow-delimiters-depth-3-face)) 155 156 (fontified t) 156 157 (fontified t face (rainbow-delimiters-depth-3-face)) 157 161 (fontified t) 161 166 (fontified t face font-lock-string-face) 166 167 (fontified t face (rainbow-delimiters-depth-3-face))) "" #("(blink-cursor-mode 0)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 22 (fontified t)) #("(blink-cursor-mode 0)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t)) #("(use-package ivy-rich
  :init
  (ivy-rich-mode 1))

(use-package counsel
  :bind ((\"M-x\" . counsel-M-x)
	 (\"C-x b\" . counsel-ibuffer)
	 (\"C-x C-f\" . counsel-find-file)
	 :map minibuffer-local-map
	 (\"C-r\" . 'counsel-minibuffer-history)))

(use-package helpful
  :custom
  (counsel-describe-function-function #'helpful-callable)
  (counsel-describe-variable-function #'helpful-variable)
  :bind
  ([remap describe-function] . counsel-describe-function)
  ([remap describe-command] . helpful-command)
  ([remap describe-variable] . counsel-describe-variable)
  ([remap describe-key] . helpful-key))

" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 21 (face font-lock-constant-face fontified t) 21 24 (fontified t) 24 29 (face font-lock-builtin-face fontified t) 29 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 64 (face font-lock-keyword-face fontified t) 64 65 (fontified t) 65 72 (face font-lock-constant-face fontified t) 72 75 (fontified t) 75 80 (face font-lock-builtin-face fontified t) 80 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (face (rainbow-delimiters-depth-3-face) fontified t) 83 88 (face font-lock-string-face fontified t) 88 102 (fontified t) 102 103 (face (rainbow-delimiters-depth-3-face) fontified t) 103 106 (fontified t) 106 107 (face (rainbow-delimiters-depth-3-face) fontified t) 107 114 (face font-lock-string-face fontified t) 114 132 (fontified t) 132 133 (face (rainbow-delimiters-depth-3-face) fontified t) 133 136 (fontified t) 136 137 (face (rainbow-delimiters-depth-3-face) fontified t) 137 146 (face font-lock-string-face fontified t) 146 153 (fontified t) 153 166 (fontified t) 166 167 (face (rainbow-delimiters-depth-3-face) fontified t) 167 168 (fontified t) 168 170 (fontified t) 170 174 (face font-lock-builtin-face fontified t) 174 198 (fontified t) 198 199 (face (rainbow-delimiters-depth-3-face) fontified t) 199 204 (face font-lock-string-face fontified t) 204 234 (fontified t) 234 235 (face (rainbow-delimiters-depth-3-face) fontified t) 235 236 (face (rainbow-delimiters-depth-2-face) fontified t) 236 237 (face (rainbow-delimiters-depth-1-face) fontified t) 237 239 (fontified t) 239 240 (face (rainbow-delimiters-depth-1-face) fontified t) 240 251 (face font-lock-keyword-face fontified t) 251 252 (fontified t) 252 259 (face font-lock-constant-face fontified t) 259 262 (fontified t) 262 269 (face font-lock-builtin-face fontified t) 269 272 (fontified t) 272 273 (face (rainbow-delimiters-depth-2-face) fontified t) 273 326 (fontified t) 326 327 (face (rainbow-delimiters-depth-2-face) fontified t) 327 330 (fontified t) 330 331 (face (rainbow-delimiters-depth-2-face) fontified t) 331 384 (fontified t) 384 385 (face (rainbow-delimiters-depth-2-face) fontified t) 385 388 (fontified t) 388 393 (face font-lock-builtin-face fontified t) 393 396 (fontified t) 396 397 (face (rainbow-delimiters-depth-2-face) fontified t) 397 398 (face (rainbow-delimiters-depth-3-face) fontified t) 398 421 (fontified t) 421 422 (face (rainbow-delimiters-depth-3-face) fontified t) 422 450 (fontified t) 450 451 (face (rainbow-delimiters-depth-2-face) fontified t) 451 454 (fontified t) 454 455 (face (rainbow-delimiters-depth-2-face) fontified t) 455 456 (face (rainbow-delimiters-depth-3-face) fontified t) 456 478 (fontified t) 478 479 (face (rainbow-delimiters-depth-3-face) fontified t) 479 497 (fontified t) 497 498 (face (rainbow-delimiters-depth-2-face) fontified t) 498 501 (fontified t) 501 502 (face (rainbow-delimiters-depth-2-face) fontified t) 502 503 (face (rainbow-delimiters-depth-3-face) fontified t) 503 526 (fontified t) 526 527 (face (rainbow-delimiters-depth-3-face) fontified t) 527 555 (fontified t) 555 556 (face (rainbow-delimiters-depth-2-face) fontified t) 556 559 (fontified t) 559 560 (face (rainbow-delimiters-depth-2-face) fontified t) 560 561 (face (rainbow-delimiters-depth-3-face) fontified t) 561 579 (fontified t) 579 580 (face (rainbow-delimiters-depth-3-face) fontified t) 580 594 (fontified t) 594 595 (face (rainbow-delimiters-depth-2-face) fontified t) 595 596 (face (rainbow-delimiters-depth-1-face) fontified t) 596 597 (fontified t) 597 598 (fontified t)) "" "" "" "" #("font \"Ricty Diminished\"" 0 4 (face font-lock-builtin-face fontified t) 4 5 (fontified t) 5 6 (face font-lock-string-face fontified t) 6 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face)) #(" :font \"Ricty Diminished\" :height" 0 1 (fontified t) 1 6 (face font-lock-builtin-face fontified t) 6 7 (fontified t) 7 13 (face font-lock-string-face fontified t) 13 24 (fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 33 (face font-lock-string-face fontified t)) #("(blink-cursor-mode 0)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 22 (fontified t)) #("(blink-cursor-mode 0)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 22 (fontified t)) #("(blink-cursor-mode 0)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 22 (fontified t)) #("
" 0 1 (fontified t)) #("(blink-cursor-mode 0)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 22 (fontified t)) #("
" 0 1 (fontified t)) #("(setq visible-cursor nil)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 26 (fontified t)) #("0" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #(";; Disable line numbers for some modes
(dolist (mode '(org-mode-hook
		term-mode-hook
		shell-mode-hook
		eshell-mode-hook))
  (add-hook mode (lambda () (display-line-numbers-mode 0))))
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 39 (fontified t face font-lock-comment-face) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 46 (fontified t face font-lock-keyword-face) 46 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-2-face)) 48 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-3-face)) 55 122 (fontified t) 122 123 (fontified t face (rainbow-delimiters-depth-3-face)) 123 124 (fontified t face (rainbow-delimiters-depth-2-face)) 124 127 (fontified t) 127 128 (fontified t face (rainbow-delimiters-depth-2-face)) 128 142 (fontified t) 142 143 (fontified t face (rainbow-delimiters-depth-3-face)) 143 149 (fontified t face font-lock-keyword-face) 149 150 (fontified t) 150 151 (fontified t face (rainbow-delimiters-depth-4-face)) 151 152 (fontified t face (rainbow-delimiters-depth-4-face)) 152 153 (fontified t) 153 154 (fontified t face (rainbow-delimiters-depth-4-face)) 154 181 (fontified t) 181 182 (fontified t face (rainbow-delimiters-depth-4-face)) 182 183 (fontified t face (rainbow-delimiters-depth-3-face)) 183 184 (fontified t face (rainbow-delimiters-depth-2-face)) 184 185 (fontified t face (rainbow-delimiters-depth-1-face)) 185 186 (fontified t)) #(";; (use-package smart-mode-line)

" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 33 (face font-lock-comment-face fontified t) 33 34 (fontified t)) #("(column-number-mode)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t) 5 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 21 (fontified t)) #("(column-number-mode 1)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t)) ";; user interface

(when (version<= \"26.0.50\" emacs-version )
  (global-display-line-numbers-mode))

(column-number-mode 1)
(blink-cursor-mode 0)
(setq use-dialog-box nil)

(progn
  ;; no need to warn
  (put 'narrow-to-region 'disabled nil)
  (put 'narrow-to-page 'disabled nil)
  (put 'upcase-region 'disabled nil)
  (put 'downcase-region 'disabled nil)
  (put 'erase-buffer 'disabled nil)
  (put 'scroll-left 'disabled nil)
  (put 'dired-find-alternate-file 'disabled nil)
)
" #(";; (setq-default mode-line-format nil)
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 39 (fontified t face font-lock-comment-face)) #("Ricty Diminished" 0 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face rear-nonsticky t fontified t)) #("DejaVu Sans Mono" 0 7 (fontified t face font-lock-string-face) 7 12 (face font-lock-string-face fontified t) 12 16 (face font-lock-string-face fontified t)) #("DejaVu Sans Mono" 0 6 (face font-lock-string-face fontified t) 6 11 (face font-lock-string-face fontified t) 11 16 (fontified t face font-lock-string-face)) #("DejaVu Sans Mono" 0 6 (face font-lock-string-face fontified t) 6 11 (face font-lock-string-face fontified t) 11 16 (fontified t face font-lock-string-face)) #("Ricty Diminished" 0 16 (face font-lock-string-face fontified t)) ";; set default font
(set-frame-font
 (cond
  ((string-equal system-type \"windows-nt\") ; Microsoft Windows
   (if (member \"Consolas\" (font-family-list))
       \"Consolas\"
     nil
     ))
  ((string-equal system-type \"darwin\") ; macOS
   (if (member \"Menlo\" (font-family-list))
       \"Menlo-14\"
     nil
     ))
  ((string-equal system-type \"gnu/linux\") ; linux
   (if (member \"DejaVu Sans Mono\" (font-family-list))
       \"DejaVu Sans Mono\"
     nil
     ))
  (t nil))
 t t)

;; set font for emoji
(set-fontset-font
 t
 '(#x1f300 . #x1fad0)
 (cond
  ((member \"Noto Color Emoji\" (font-family-list)) \"Noto Color Emoji\")
  ((member \"Noto Emoji\" (font-family-list)) \"Noto Emoji\")
  ((member \"Segoe UI Emoji\" (font-family-list)) \"Segoe UI Emoji\")
  ((member \"Symbola\" (font-family-list)) \"Symbola\")
  ((member \"Apple Color Emoji\" (font-family-list)) \"Apple Color Emoji\"))
 ;; Apple Color Emoji should be before Symbola, but Richard Stallman skum disabled it.
 ;; GNU Emacs Removes Color Emoji Support on the Mac
 ;; http://ergoemacs.org/misc/emacs_macos_emoji.html
 ;;
 )

(cond
 ;; specify font for chinese characters
 ((string-equal system-type \"windows-nt\")
  (set-fontset-font
   t
   '(#x4e00 . #x9fff)
   (cond
    ((member \"Microsoft YaHei\" (font-family-list)) \"Microsoft YaHei\")
    ((member \"PMingLiU\" (font-family-list)) \"PMingLiU\")
    ((member \"SimHei\" (font-family-list)) \"SimHei\")
    ((member \"Microsoft YaHei UI\" (font-family-list)) \"Microsoft YaHei UI\")
    ((member \"MingLiU\" (font-family-list)) \"MingLiU\")
    ((member \"SimHei\" (font-family-list)) \"SimHei\")
    ((member \"DengXian\" (font-family-list)) \"DengXian\")
    ((member \"KaiTi\" (font-family-list)) \"KaiTi\")
    ((member \"SimSun\" (font-family-list)) \"SimSun\"))))
 ((string-equal system-type \"darwin\")
  (cond
   ((member \"Heiti SC\" (font-family-list)) \"Heiti SC\")
   ((member \"Heiti TC\" (font-family-list)) \"Heiti TC\")
   ((member \"Songti SC\" (font-family-list)) \"Songti SC\")
   ((member \"Songti TC\" (font-family-list)) \"Songti TC\")
   ((member \"Kaiti SC\" (font-family-list)) \"Kaiti SC\")
   ((member \"BiauKai\" (font-family-list)) \"BiauKai\")))
 ((string-equal system-type \"gnu/linux\")
  (cond
   ((member \"WenQuanYi Micro Hei\" (font-family-list)) \"WenQuanYi Micro Hei\"))))

(progn
  ;; use variable-width font for some modes
  (defun xah-set-proportial-font ()
    \"Set current buffer to use variable-width font.\"
    (variable-pitch-mode 1)
    (text-scale-increase 1 ))

  (add-hook 'html-mode-hook 'xah-set-proportial-font)
  (add-hook 'nxml-mode-hook 'xah-set-proportial-font)
  (add-hook 'emacs-lisp-mode-hook 'xah-set-proportial-font)
  (add-hook 'js-mode-hook 'xah-set-proportial-font)
  (add-hook 'css-mode-hook 'xah-set-proportial-font)

  (add-hook 'xah-elisp-mode-hook 'xah-set-proportial-font)
  (add-hook 'xah-html-mode-hook 'xah-set-proportial-font)
  (add-hook 'xah-css-mode-hook 'xah-set-proportial-font)
  (add-hook 'xah-js-mode-hook 'xah-set-proportial-font)
  ;;
  )
" "" #("(setq initial-frame-alist (append '((minibuffer . nil)) initial-frame-alist))
(setq default-frame-alist (append '((minibuffer . nil)) default-frame-alist))
(setq minibuffer-auto-raise t)
(setq minibuffer-exit-hook '(lambda () (lower-frame)))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t) 27 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-3-face) fontified t) 36 37 (face (rainbow-delimiters-depth-4-face) fontified t) 37 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-4-face) fontified t) 54 55 (face (rainbow-delimiters-depth-3-face) fontified t) 55 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-2-face) fontified t) 76 77 (face (rainbow-delimiters-depth-1-face) fontified t) 77 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 83 (face font-lock-keyword-face fontified t) 83 104 (fontified t) 104 105 (face (rainbow-delimiters-depth-2-face) fontified t) 105 113 (fontified t) 113 114 (face (rainbow-delimiters-depth-3-face) fontified t) 114 115 (face (rainbow-delimiters-depth-4-face) fontified t) 115 131 (fontified t) 131 132 (face (rainbow-delimiters-depth-4-face) fontified t) 132 133 (face (rainbow-delimiters-depth-3-face) fontified t) 133 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-2-face) fontified t) 154 155 (face (rainbow-delimiters-depth-1-face) fontified t) 155 156 (fontified t) 156 157 (fontified t face (rainbow-delimiters-depth-1-face)) 157 161 (fontified t face font-lock-keyword-face) 161 185 (fontified t) 185 186 (fontified t face (rainbow-delimiters-depth-1-face)) 186 187 (fontified t) 187 188 (face (rainbow-delimiters-depth-1-face) fontified t) 188 192 (face font-lock-keyword-face fontified t) 192 215 (fontified t) 215 216 (face (rainbow-delimiters-depth-2-face) fontified t) 216 223 (fontified t) 223 224 (face (rainbow-delimiters-depth-3-face) fontified t) 224 225 (face (rainbow-delimiters-depth-3-face) fontified t) 225 226 (fontified t) 226 227 (face (rainbow-delimiters-depth-3-face) fontified t) 227 238 (fontified t) 238 239 (face (rainbow-delimiters-depth-3-face) fontified t) 239 240 (face (rainbow-delimiters-depth-2-face) fontified t) 240 241 (face (rainbow-delimiters-depth-1-face) fontified t) 241 242 (fontified t)) ""))
(setq search-ring '(#("ac-c" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("ac-" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("ESC" 0 3 (isearch-regexp-function nil isearch-case-fold-search nil)) #("curs" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("char" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("smah" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("engin" 0 5 (isearch-regexp-function nil isearch-case-fold-search t)) #("click" 0 5 (isearch-regexp-function nil isearch-case-fold-search t)) #("geom" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("exwm" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("important f f" 0 13 (isearch-regexp-function nil isearch-case-fold-search t)) #("12" 0 2 (isearch-case-fold-search t isearch-regexp-function nil)) #("font" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("size" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("cur" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) #("cursor" 0 6 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq regexp-search-ring 'nil)
