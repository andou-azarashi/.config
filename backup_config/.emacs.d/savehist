;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(input-method-history org-read-date-history minibuffer-history-search-history read-char-history empty-history magit-revision-history tmm--history command-history exwm-workspace--switch-history yes-or-no-p-history face-name-history buffer-name-history ido-buffer-history ido-file-history minibuffer-history file-name-history extended-command-history shell-command-history))
(setq read-char-history '("yes"))
(setq magit-revision-history '("origin/master"))
(setq tmm--history '("h==>Help" "m==>Minibuf" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq command-history '((find-file "/home/andou/.emacs.d/myinit.org") (write-file "/home/andou/dotfiles/backup_config/.emacs.d/myinit.org" t) (customize-face '(default)) (customize-themes) (org-insert-structure-template "src") (package-install 'which-key nil) (package-refresh-contents) (write-file "/home/andou/main/dwm-6.2/config.h" t) (find-file "/home/andou/.emacs.d/init.el") (write-file "/home/andou/.emacs.d/myinit.org" t) (comment-line 1) (write-file "/home/andou/.xinitrc" t) (write-file "/home/andou/.config/alacritty/alacritty.yml" t) (find-file "/home/andou/main/dwm-6.2/config.h") (package-install 'xah-fly-keys nil) (package-list-packages nil) (find-file "/home/andou/.xinitrc") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "fcitx-configtool ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "alacritty ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "brave ") (kill-buffer "addresse_pointer.c") (dired "/home/andou/learnc/head_first/" nil) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "steam") (kill-buffer "pcloud") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "pcloud ") (kill-buffer "alacritty.yml") (find-file "/home/andou/.config/alacritty/alacritty.yml") (kill-buffer "Brave-browser") (kill-buffer "myinit.org") (kill-buffer ".xinitrc") (kill-buffer "config.h") (find-file "/home/andou/main/st/config.h") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "st") (dired "/home/andou/.config/" nil) (package-autoremove) (magit-push-current-to-pushremote nil "origin") (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "b99f135") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "5e7d194") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "81882375f2356219afcd7ba19c51fabad30d7448") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "5e7d194bdbc9d83edd38497fbf4484963278cca5") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "update fcitx") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "5e7d194bdbc9d83edd38497fbf4484963278cca5") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "5e7d194 update fcitx") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "5e7d194bdbc9d83edd38497fbf4484963278cca5") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((61 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "4d3c51c") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "b99f135") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "159cda417f6fbd39c9488a1c5a69fcdb6b7036e7") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "updateq") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "b99f135 updateq") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "magit: .config") (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "4d3c51c") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "b99f135") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "159cda417f6fbd39c9488a1c5a69fcdb6b7036e7") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "updateq") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "b99f135 updateq") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "b99f1353716d4ebf7b6341fef9740a94257ccaf0") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (dired "/home/andou/.config/nvim/" nil) (package-delete #s(package-desc wakatime-mode (20180920 702) "Automatic time tracking extension for WakaTime" nil nil nil "/home/andou/.emacs.d/elpa/wakatime-mode-20180920.702" ((:maintainer "Alan Hamlett" . "alan@wakatime.com") (:authors ("Gabor Torok" . "gabor@20y.hu")) (:keywords "calendar" "comm") (:commit . "2531cb58287770883ba534d20b3288955c4d6ef3")) nil) nil nil) (dired "/home/andou/.emacs.d/" nil) (package-install 'solarized-theme nil) (find-file "/home/andou/.emacs.d/myinit.el") (toggle-word-wrap nil) (org-mode) (package-delete #s(package-desc nyan-mode (1 1 3) "Nyan Cat shows position in current buffer in mode-line." nil nil nil "/home/andou/.emacs.d/elpa/nyan-mode-1.1.3" ((:url . "https://github.com/TeMPOraL/nyan-mode/") (:maintainer "Jacek \"TeMPOraL\" Zlydach" . "temporal.pl@gmail.com") (:authors ("Jacek \"TeMPOraL\" Zlydach" . "temporal.pl@gmail.com")) (:keywords "nyan" "cat" "lulz" "scrolling" "pop tart cat" "build something amazing") (:commit . "06e67ab2c490756d3eeed4a68aba7c33e508a5d5")) nil) nil nil) (find-file "/home/andou/.config/zsh/.zshrc") (magit-show-commit "origin/master" '("--stat" "--no-ext-diff") nil nil) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "29fb0ec") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "7b205c1") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "61a31e8e09eead54266a13275fa7908e8902a2cd") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "Setting changed") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "7b205c1 Setting changed") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.pager" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "29fb0ec") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "7b205c1") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "61a31e8e09eead54266a13275fa7908e8902a2cd") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "Setting changed") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "7b205c1 Setting changed") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.pager" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "pacman.conf") (find-file "/sudo::/etc/pacman.conf") (find-file "/home/andou/.config/newsboat/urls") (kill-buffer "Gimp-2.10") (kill-buffer "Fcitx-config-gtk3") (kill-buffer ".zprofile") (find-file "/home/andou/.config/zsh/.zprofile") (find-file "/home/andou/.config/zsh/.zprofile") (kill-buffer ".gitconfig") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "gimp") (kill-buffer "*ansi-term*") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "krita") (switch-to-buffer "Brave-browser") (ansi-term "/bin/zsh") (kill-buffer "grub") (find-file "/sudo::/etc/default/grub") (kill-buffer "grub") (dired "/etc/default/" nil) (shell-command "reboot" nil nil) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "polychromatic-controller ") (shell-command "poweroff" nil nil) (kill-buffer "main.c") (find-file "/home/andou/learnc/calculator/main.c") (kill-buffer "main.c") (find-file "/home/andou/learnc/caculator/main.c") (kill-buffer "switch_card.c") (dired "/home/andou/learnc/" nil) (kill-buffer "tictactoe.c") (find-file "/home/andou/test_project/tictactoe_c/tictactoe.c") (kill-buffer ".gitconfig") (kill-buffer "*Edit Macro*") (find-file "/home/andou/.gitconfig") (switch-to-buffer "Brave-browser") (kill-buffer ".en_QC") (find-file "/home/andou/.en_QC") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "flameshot ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "dmenu") (kill-buffer "tictactoe.c") (find-file "/home/andou/test_project/tictactoe_c/tictactoe.c") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "woeusb") (switch-to-buffer "Brave-browser") (kill-buffer "COMMIT_EDITMSG") (switch-to-buffer "Brave-browser") (kill-buffer "*unsent mail*") (kill-buffer "*ansi-term*") (kill-buffer "*ansi-term*") (kill-buffer "*terminal*") (term "/bin/zsh") (kill-buffer "*terminal*") (load-file "/home/andou/.emacs.d/init.el") (kill-buffer "init.el") (switch-to-buffer "Brave-browser") (kill-buffer "*terminal*") (switch-to-buffer "Brave-browser") (kill-buffer "*shell*") (shell nil) (switch-to-buffer "Brave-browser") (kill-buffer "lfrc") (find-file "/home/andou/.config/lf/lfrc") (kill-buffer "lfrc") (find-file "/home/andou/.config/lf/lfrc") (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "c91649b") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "2c19dfb") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "696736ef7d1795040d90b4104fecb207afab6b5b") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "2c19dfb70e000d8fddc16716c162c7b56badae83") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "Change vimb styles.css") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "2c19dfb70e000d8fddc16716c162c7b56badae83") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "2c19dfb Change vimb styles.css") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "2c19dfb70e000d8fddc16716c162c7b56badae83") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((63 . 34) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "c91649bf1c7d84e095a40469ff8656ff1ccb2973^{commit}" "--") . #("c91649b deleted the plugin folder fome repo folder" 0 7 (face magit-hash))) (("/home/andou/.config/" "ls-files" "--unmerged")) (("/home/andou/.config/" "rev-parse" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" magit-git-dir "sequencer/head") . "/home/andou/.config/.git/sequencer/head") (("/home/andou/.config/" magit-git-dir "sequencer/todo") . "/home/andou/.config/.git/sequencer/todo") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "style.css") (find-file "/home/andou/.config/vimb/style.css") (kill-buffer "style.css") (find-file "/home/andou/.config/vimb/style.css") (magit-status "/home/andou/.config/" '((63 . 34) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "c91649bf1c7d84e095a40469ff8656ff1ccb2973^{commit}" "--") . #("c91649b deleted the plugin folder fome repo folder" 0 7 (face magit-hash))) (("/home/andou/.config/" "ls-files" "--unmerged")) (("/home/andou/.config/" "rev-parse" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" magit-git-dir "sequencer/head") . "/home/andou/.config/.git/sequencer/head") (("/home/andou/.config/" magit-git-dir "sequencer/todo") . "/home/andou/.config/.git/sequencer/todo") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "Fcitx-config-gtk3") (magit-status "/home/andou/.config/" '((64 . 34) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "c91649bf1c7d84e095a40469ff8656ff1ccb2973^{commit}" "--") . #("c91649b deleted the plugin folder fome repo folder" 0 7 (face magit-hash))) (("/home/andou/.config/" "ls-files" "--unmerged")) (("/home/andou/.config/" "rev-parse" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" magit-git-dir "sequencer/head") . "/home/andou/.config/.git/sequencer/head") (("/home/andou/.config/" magit-git-dir "sequencer/todo") . "/home/andou/.config/.git/sequencer/todo") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "Brave-browser<2>") (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer ".gitignore") (find-file "/home/andou/.config/.gitignore") (kill-buffer ".zprofile") (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "de73003") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "945ed9b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "49548fe3c4a79c39a16bf5acf25825f8676cfc1b") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "change git editor") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "945ed9b change git editor") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "de73003") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "945ed9b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "49548fe3c4a79c39a16bf5acf25825f8676cfc1b") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "change git editor") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "945ed9b change git editor") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer ".gitconfig") (find-file "/home/andou/.gitconfig") (kill-buffer ".zprofile") (find-file "/home/andou/.config/zsh/.zprofile") (kill-buffer ".asoundrc") (find-file "/home/andou/.asoundrc") (kill-buffer "Steam") (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "61a31e8") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "de73003") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "c971419f45bcc9904a55d4c05e128d1f0900bf31") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "minor change") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "de73003 minor change") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.pager" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer ".zprofile") (find-file "/home/andou/.config/zsh/.zprofile") (kill-buffer ".gitconfig") (find-file "/home/andou/.gitconfig") (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "61a31e8") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "de73003") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "c971419f45bcc9904a55d4c05e128d1f0900bf31") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "minor change") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "de73003 minor change") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs -c") "core.pager" ("emacs -c") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (git-commit-save-message) (kill-buffer "init.vim") (kill-buffer "Emacs") (server-force-delete nil) (kill-buffer "Emacs") (kill-buffer ".gitconfig") (find-file "/home/andou/.gitconfig") (kill-buffer "Emacs") (kill-buffer ".zprofile") (kill-buffer ".gitconfig") (find-file "/home/andou/.config/zsh/.zprofile") (find-file "/home/andou/.gitconfig") (kill-buffer "Emacs") (switch-to-buffer "Brave-browser") (switch-to-buffer "andou") (switch-to-buffer "unity_test") (dired "/home/andou/" nil) (kill-buffer "test.html") (find-file "/home/andou/test.html") (package-install 'gruvbox-theme nil) (kill-buffer ".zprofile") (find-file "/home/andou/.config/zsh/.zprofile") (kill-buffer ".zshrc") (zap-to-char 1 27) (package-delete #s(package-desc spacemacs-theme (20200615 1304) "Color theme with a dark and light versions" nil nil nil "/home/andou/.emacs.d/elpa/spacemacs-theme-20200615.1304" ((:url . "https://github.com/nashamri/spacemacs-theme") (:keywords "color" "theme") (:commit . "e39254159a4fa99a1a92037e4ae23216d362aab1")) nil) nil nil) (package-delete #s(package-desc doom-themes (20200730 744) "an opinionated pack of modern color-themes" ((emacs (25 1)) (cl-lib (0 5))) nil nil "/home/andou/.emacs.d/elpa/doom-themes-20200730.744" ((:url . "https://github.com/hlissner/emacs-doom-theme") (:maintainer "Henrik Lissner" . "henrik@lissner.net") (:authors ("Henrik Lissner <http://github/hlissner>")) (:keywords "dark" "light" "blue" "atom" "one" "theme" "neotree" "icons" "faces" "nova") (:commit . "180747a4cb848b6378b13bcaf908ea12c95bb4a6")) nil) nil nil) (package-install 'doom-themes nil) (package-delete #s(package-desc monokai-theme (20200416 2001) "A fruity color theme for Emacs." nil nil nil "/home/andou/.emacs.d/elpa/monokai-theme-20200416.2001" ((:url . "http://github.com/oneKelvinSmith/monokai-emacs") (:maintainer "Kelvin Smith" . "oneKelvinSmith@gmail.com") (:authors ("Kelvin Smith" . "oneKelvinSmith@gmail.com")) (:commit . "4281fc13dadef98942c8d43024de024f2392fec5")) nil) nil nil) (zap-to-char 1 134217827) (package-install 'monokai-theme nil) (package-install 'spacemacs-theme nil) (switch-to-buffer "Brave-browser") (shell-command "dmenu" nil nil) (package-install 'exotica-theme nil) (list-packages nil) (kill-buffer "*Org Src myinit.org[ emacs-lisp ]*") (list-packages nil) (describe-key "\241" 1 nil) (shell-command "dmenufm" nil nil) (shell-command "demufm" nil nil) (describe-key [67108897] 1 nil) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "dmenufm") (describe-key "c" 1 nil) (switch-to-buffer "Brave-browser")))
(setq exwm-workspace--switch-history '(#("[0] 1  2  3 " 1 2 (face nil) 4 5 (face (:foreground "green")) 7 8 (face (:foreground "green")) 10 11 (face (:foreground "green"))) #(" 0 [1] 2  3 " 1 2 (face nil) 4 5 (face (:foreground "green")) 7 8 (face (:foreground "green")) 10 11 (face (:foreground "green"))) #(" 0  1 [2] 3 " 1 2 (face nil) 4 5 (face (:foreground "green")) 7 8 (face (:foreground "green")) 10 11 (face (:foreground "green"))) #(" 0  1  2 [3]" 1 2 (face nil) 4 5 (face (:foreground "green")) 7 8 (face (:foreground "green")) 10 11 (face (:foreground "green")))))
(setq yes-or-no-p-history '("no" "yes"))
(setq face-name-history '("default"))
(setq buffer-name-history '("addresse_pointer.c" "pcloud" "alacritty.yml" "Brave-browser" "myinit.org" ".xinitrc" "config.h" "magit: .config" "pacman.conf" "Gimp-2.10" "Fcitx-config-gtk3" ".zprofile" ".gitconfig" "*ansi-term*" "grub" "main.c" "switch_card.c" "tictactoe.c" "*Edit Macro*" ".en_QC" "COMMIT_EDITMSG" "*unsent mail*" "*terminal*" "init.el" "*shell*" "lfrc" "style.css" "Brave-browser<2>" ".gitignore" ".asoundrc" "Steam" "init.vim" "Emacs" " Brave-browser" "andou" "unity_test" "test.html" ".zshrc" "*Org Src myinit.org[ emacs-lisp ]*" "evdev.lst" "exwm-autoloads.el" "exwm-core.el" ".emacs.d" "exwm.org" "exwm-config.el" "x.c" "win.h" "config.mk" "Makefile" "*scratch*" "st-256color" "custom.el.gz" "myinit.o"))
(setq ido-buffer-history '("addresse_pointer.c" "pcloud" "alacritty.yml" "Brave-browser" "myinit.org" ".xinitrc" "config.h" "magit: .config" "pacman.conf" "Gimp-2.10" "Fcitx-config-gtk3" ".zprofile" ".gitconfig" "*ansi-term*" "grub" "main.c" "switch_card.c" "tictactoe.c" "*Edit Macro*" ".en_QC" "COMMIT_EDITMSG" "*unsent mail*" "*terminal*" "init.el" "*shell*" "lfrc" "style.css" "Brave-browser<2>" ".gitignore" ".asoundrc" "Steam" "init.vim" "Emacs" " Brave-browser" "andou" "unity_test" "test.html" ".zshrc" "*Org Src myinit.org[ emacs-lisp ]*" "evdev.lst" "exwm-autoloads.el" "exwm-core.el" ".emacs.d" "exwm.org" nil "exwm-config.el" "x.c" "win.h" "config.mk" "Makefile" "*scratch*" "st-256color" "custom.el.gz" "myinit.el"))
(setq ido-file-history '("myinit.org" "config.h" "init.el" ".xinitrc" "alacritty.yml" "." nil "myinit.el" ".zshrc" "pacman.conf" "urls" ".zprofile" "grub" "main.c" "tictactoe.c" ".gitconfig" ".en_QC" "lfrc" "style.css" ".gitignore" ".asoundrc" "test.html" "evdev.lst" "exwm-config.el" "exwm.org" "init.vim"))
(setq minibuffer-history '("which-key" "xah-fly-keys" "#" "origin" "wakatime-mode-20180920.702" "solarized-theme" "nyan-mode-1.1.3" "/bin/zsh" "gruvbox-theme" "spacemacs-theme-20200615.1304" "doom-themes-20200730.744" "doom-themes" "monokai-theme-20200416.2001" "monokai-theme" "spacemacs-theme" "exotica-theme" "frame-background-mode" "solarized-theme-1.3.1" "\"" "dracula-theme-1.7.0" "gruvbox-theme-1.28.0" "use-package"))
(setq file-name-history '("/home/andou/.emacs.d/myinit.org" "/home/andou/.emacs.d/init.el" "/home/andou/main/dwm-6.2/config.h" "/home/andou/.xinitrc" "/home/andou/.config/alacritty/alacritty.yml" "/home/andou/main/st/config.h" "/home/andou/.emacs.d/myinit.el" "/home/andou/.config/zsh/.zshrc" "/sudo::/etc/pacman.conf" "/home/andou/.config/newsboat/urls" "/home/andou/.config/zsh/.zprofile" "/sudo::/etc/default/grub" "/home/andou/learnc/calculator/main.c" "/home/andou/learnc/caculator/main.c" "/home/andou/test_project/tictactoe_c/tictactoe.c" "/home/andou/.gitconfig" "/home/andou/.en_QC" "/home/andou/.config/lf/lfrc" "/home/andou/.config/vimb/style.css" "/home/andou/.config/.gitignore" "/home/andou/.asoundrc" "/home/andou/test.html" "/usr/share/X11/xkb/rules/evdev.lst" "/home/andou/.emacs.d/elpa/exwm-0.24/exwm-config.el" "/home/andou/.emacs.d/exwm.org" "/home/andou/.config/nvim/init.vim" "~/.emacs.d/myinit.org" "~/.emacs.d/myinit.o" "~/.emacs.d/init.el"))
(setq extended-command-history '("write-file" "customize-face" "customize-themes" "org-insert-structure-template" "package-install" "package-refresh-contents" "comment-line" "which-key-mode" "package-list-packages" "dired" "package-autoremove" "package-delete" "toggle-word-wrap" "org-mode" "ansi-term" "term" "load-file" "shell" "git-commit-save-message" "server-force-delete" "list-packages" "describe-key" "copy-directory" "copy-file" "customize-variable"))
(setq shell-command-history '("fcitx-configtool " "alacritty " "brave " "steam" "pcloud " "st" "gimp" "krita" "reboot" "polychromatic-controller " "poweroff" "flameshot " "dmenu" "woeusb" "dmenufm" "demufm" "minecraft-launcher " "vimb" "brave"))
(setq kill-ring '(#("p
#+END" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 7 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) "For help using this buffer, see [Easy Customization] in the [Emacs manual].
" "Type ? to describe the theme at point.
Type ? to describe the theme at point.
Type ? to describe the theme at point.
Type ? to describe the theme at point.
Type ? to describe the theme at point.
Type ? to describe the theme at point.
Type ? to describe the theme at point.
" "Type ? to describe the theme at point.
Type ? to describe the theme at point.
" "Type RET or click to enable/disable listed custom themes.
Type RET or click to enable/disable listed custom themes.
Type RET or click to enable/disable listed custom themes.
Type RET or click to enable/disable listed custom themes.
Type RET or click to enable/disable listed custom themes.
" #("s" 0 1 (fontified t)) #("This is GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)(build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)(build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)(build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)(build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)(build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)(build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)(build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)(build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)(build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)" 0 8 (face (variable-pitch font-lock-builtin-face) help-echo "For information about GNU Emacs and the GNU system, type C-h C-a.") 8 97 (face (variable-pitch font-lock-builtin-face) help-echo "For information about GNU Emacs and the GNU system, type C-h C-a.") 97 171 (face (variable-pitch font-lock-builtin-face) help-echo "For information about GNU Emacs and the GNU system, type C-h C-a.") 171 245 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 245 319 (face (variable-pitch font-lock-builtin-face) help-echo "For information about GNU Emacs and the GNU system, type C-h C-a.") 319 393 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 393 467 (face (variable-pitch font-lock-builtin-face) help-echo "For information about GNU Emacs and the GNU system, type C-h C-a.") 467 541 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 541 615 (face (variable-pitch font-lock-builtin-face) help-echo "For information about GNU Emacs and the GNU system, type C-h C-a.") 615 689 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 689 763 (face (variable-pitch font-lock-builtin-face) help-echo "For information about GNU Emacs and the GNU system, type C-h C-a.")) #("
" 0 1 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face))) #("
" 0 1 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch)) #("To quit a partially entered command, type Control-g." 0 42 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 42 51 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face default) 51 52 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch)) #("
" 0 1 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch)) #("To start...     Open a File     Open Home Directory     Customize Startup" 0 16 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 27 32 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 51 56 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch)) #("
" 0 1 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch)) "Important ie ie
To stop the tutorial, type C-x k, then <Return> at the prompt.
The characters \">>\" at the left margin indicate directions for you to
try using a command.  For instance:

[Middle of page left blank for didactic purposes.   Text continues below]

" "To quit a partially entered command, type C-g." "
" "note: to end the Emacs session, type C-x C-c.  (Two characters.)" "and type v, or type <ESC>v if you do not have a META, EDIT, or ALT key)." "
" #("with C-v.  To move backwards one screen, type M-v (hold down the META key" 5 8 (face tutorial-warning-face tutorial-remark key-sequence help-echo "C-v has been rebound, but you can use C-0 instead")) "
" "to place in the text.  You already know how to move forward one screen," "
" "The first thing that you need to know is how to move around from place" #(">> Now type C-v (View next screen) to scroll down in the tutorial.
** C-v has been rebound, but you can use C-0 instead [More] **
	(go ahead, do it by holding down the CONTROL key while typing v).
	From now on, please do this whenever you reach the end of the screen.
you.  Later on we will instruct you to try various commands to alter
this text.  Don't worry if you change this text before we tell you to;
that is called \"editing\" and that's what Emacs is for.

" 12 15 (face tutorial-warning-face tutorial-remark key-sequence) 67 70 (tutorial-remark remark rear-nonsticky t face tutorial-warning-face read-only t) 70 119 (tutorial-remark remark rear-nonsticky t face tutorial-warning-face read-only t) 119 121 (tutorial-remark remark rear-nonsticky t face tutorial-warning-face read-only t) 121 125 (tutorial-remark remark rear-nonsticky t face tutorial-warning-face read-only t) 125 130 (tutorial-remark remark rear-nonsticky t face tutorial-warning-face read-only t)) "This is a copy of the Emacs tutorial text, customized slightly for" "Note that there is an overlap of two lines when you scroll a whole
screenful; this provides some continuity so you can continue reading
the text.

" #(" C-<chr>  means hold the CONTROL key while typing the character <chr>
	  Thus, C-f would be: hold the CONTROL key and type f.
 M-<chr>  means hold the META or EDIT or ALT key down while typing <chr>.
	  If there is no META, EDIT or ALT key, instead press and release the
	  ESC key and then type <chr>.  We write <ESC> for the ESC key.‘To stop the tutorial, type C-x k, then <Return> at the prompt.
The characters \">>\" at the left margin indicate directions for you to
try using a command.  For instance:

[Middle of page left blank for didactic purposes.   Text continues below]

>> Now type C-v (View next screen) to scroll down in the tutorial.
** C-v has been rebound, but you can use C-0 instead [More] **
	(go ahead, do it by holding down the CONTROL key while typing v).
	From now on, please do this whenever you reach the end of the screen.

" 593 596 (tutorial-remark key-sequence face tutorial-warning-face) 648 651 (read-only t face tutorial-warning-face rear-nonsticky t tutorial-remark remark) 651 700 (read-only t face tutorial-warning-face rear-nonsticky t tutorial-remark remark) 700 702 (read-only t face tutorial-warning-face rear-nonsticky t tutorial-remark remark) 702 706 (read-only t face tutorial-warning-face rear-nonsticky t tutorial-remark remark) 706 711 (read-only t face tutorial-warning-face rear-nonsticky t tutorial-remark remark)) "
" "’ quit a partially entered command, type C-g." "
" "Important note: to end the Emacs session, type C-x C-c.  (Two characters.)" "aoeunth
" " note: to end the Emacs session, type C-x C-c.  (Two characters.)
To quit a partially entered command, type C-g.
To stop the tutorial, type C-x k, then <Return> at the prompt.
The characters \">>\" at the left margin indicate directions for you to
try using a command.  For instance:

" "Important" #("Return" 0 6 (fontified t)) #("# 
# Japanese" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-face) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 13 (fontified t face font-lock-comment-face)) #("escape" 0 6 (fontified t)) "-1" "-1" "12" "4" "Medium" #("{ \"Alacritty\" \"-e\" \"nnn\",      NULL,     NULL,           0,         0,          1,           0,        -1 },	
" 0 2 (fontified t) 2 13 (face font-lock-string-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-string-face fontified t) 18 19 (fontified t) 19 24 (face font-lock-string-face fontified t) 24 31 (fontified t) 31 35 (face font-lock-constant-face fontified t) 35 41 (fontified t) 41 45 (face font-lock-constant-face fontified t) 45 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t)) #("NULL,     " 0 4 (fontified t face font-lock-constant-face) 4 10 (fontified t)) #("Alacritty\"," 0 7 (fontified t face font-lock-string-face) 7 10 (fontified t face font-lock-string-face) 10 11 (fontified t)) #("A " 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) #("nnn" 0 3 (fontified t face font-lock-string-face)) #("Alacritty" 0 9 (face font-lock-string-face fontified t)) #("p" 0 1 (fontified t)) #("	{ \"Alacritty\",      NULL,     NULL,           0,         0,          1,           0,        -1 }," 0 3 (fontified t) 3 14 (face font-lock-string-face fontified t) 14 21 (fontified t) 21 25 (face font-lock-constant-face fontified t) 25 31 (fontified t) 31 35 (face font-lock-constant-face fontified t) 35 98 (fontified t)) #("a" 0 1 (face font-lock-string-face fontified t)) #("N" 0 1 (face font-lock-constant-face fontified t)) #("  

Welcome to GNU Emacs, one component of the GNU/Linux operating system.

Emacs Tutorial	Learn basic keystroke commands
Emacs Guided Tour	Overview of Emacs features at gnu.org
View Emacs Manual	View the Emacs manual using Info
Absence of Warranty	GNU Emacs comes with ABSOLUTELY NO WARRANTY
Copying Conditions	Conditions for redistributing and changing Emacs
Ordering Manuals	Purchasing printed copies of manuals

To start...     Open a File     Open Home Directory     Customize Startup
To quit a partially entered command, type Control-g.

This is GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)
 of 2020-08-28
Copyright (C) 2020 Free Software Foundation, Inc.

Auto-save file lists were found.  If an Emacs session crashed recently,
type M-x recover-session RET to recover the files you were editing." 0 1 (display (space :align-to (+ center (-0.5 image :type svg :file "splash.svg" :scale 1.1094736842105264)))) 1 2 (display (image :type svg :file "splash.svg" :scale 1.1094736842105264) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size))) 4 15 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 24 47 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 56 76 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 90 121 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 121 122 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 139 178 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 195 229 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 248 270 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 270 293 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:slant oblique))) 311 361 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 377 414 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 415 432 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 443 448 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 467 472 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 489 490 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 490 532 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 532 541 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face default) 541 543 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 543 552 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 552 656 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 656 657 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 657 706 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 706 707 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 707 742 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 742 785 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 808 847 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face))) #("  

Welcome to GNU Emacs, one component of the GNU/Linux operating system.

Emacs Tutorial	Learn basic keystroke commands
Emacs Guided Tour	Overview of Emacs features at gnu.org
View Emacs Manual	View the Emacs manual using Info
Absence of Warranty	GNU Emacs comes with ABSOLUTELY NO WARRANTY
Copying Conditions	Conditions for redistributing and changing Emacs
Ordering Manuals	Purchasing printed copies of manuals

To start...     Open a File     Open Home Directory     Customize Startup
To quit a partially entered command, type Control-g.

This is GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)
 of 2020-08-28
Copyright (C) 2020 Free Software Foundation, Inc.

Auto-save file lists were found.  If an Emacs session crashed recently,
type M-x recover-session RET to recover the files you were editing." 0 1 (display (space :align-to (+ center (-0.5 image :type svg :file "splash.svg" :scale 1.1094736842105264)))) 1 2 (display (image :type svg :file "splash.svg" :scale 1.1094736842105264) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size))) 4 15 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 24 47 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 56 76 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 90 121 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 121 122 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 139 178 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 195 229 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 248 270 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 270 293 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:slant oblique))) 311 361 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 377 414 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 415 432 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 443 448 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 467 472 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 489 490 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 490 532 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 532 541 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face default) 541 543 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 543 552 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 552 656 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 656 657 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 657 706 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 706 707 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 707 742 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 742 785 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 808 847 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face))) #("  

Welcome to GNU Emacs, one component of the GNU/Linux operating system.

Emacs Tutorial	Learn basic keystroke commands
Emacs Guided Tour	Overview of Emacs features at gnu.org
View Emacs Manual	View the Emacs manual using Info
Absence of Warranty	GNU Emacs comes with ABSOLUTELY NO WARRANTY
Copying Conditions	Conditions for redistributing and changing Emacs
Ordering Manuals	Purchasing printed copies of manuals

To start...     Open a File     Open Home Directory     Customize Startup
To quit a partially entered command, type Control-g.

This is GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)
 of 2020-08-28
Copyright (C) 2020 Free Software Foundation, Inc.

Auto-save file lists were found.  If an Emacs session crashed recently,
type M-x recover-session RET to recover the files you were editing." 0 1 (display (space :align-to (+ center (-0.5 image :type svg :file "splash.svg" :scale 1.1094736842105264)))) 1 2 (display (image :type svg :file "splash.svg" :scale 1.1094736842105264) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size))) 4 15 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 24 47 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 56 76 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 90 121 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 121 122 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 139 178 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 195 229 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 248 270 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 270 293 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:slant oblique))) 311 361 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 377 414 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 415 432 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 443 448 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 467 472 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 489 490 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 490 532 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 532 541 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face default) 541 543 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 543 552 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 552 656 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 656 657 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 657 706 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 706 707 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 707 742 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 742 785 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 808 847 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face))) #("  

Welcome to GNU Emacs, one component of the GNU/Linux operating system.

Emacs Tutorial	Learn basic keystroke commands
Emacs Guided Tour	Overview of Emacs features at gnu.org
View Emacs Manual	View the Emacs manual using Info
Absence of Warranty	GNU Emacs comes with ABSOLUTELY NO WARRANTY
Copying Conditions	Conditions for redistributing and changing Emacs
Ordering Manuals	Purchasing printed copies of manuals

To start...     Open a File     Open Home Directory     Customize Startup
To quit a partially entered command, type Control-g.

This is GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)
 of 2020-08-28
Copyright (C) 2020 Free Software Foundation, Inc.

Auto-save file lists were found.  If an Emacs session crashed recently,
type M-x recover-session RET to recover the files you were editing." 0 1 (display (space :align-to (+ center (-0.5 image :type svg :file "splash.svg" :scale 1.1094736842105264)))) 1 2 (display (image :type svg :file "splash.svg" :scale 1.1094736842105264) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size))) 4 15 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 24 47 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 56 76 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 90 121 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 121 122 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 139 178 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 195 229 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 248 270 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 270 293 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:slant oblique))) 311 361 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 377 414 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 415 432 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 443 448 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 467 472 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 489 490 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 490 532 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 532 541 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face default) 541 543 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 543 552 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 552 656 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 656 657 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 657 706 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 706 707 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 707 742 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 742 785 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 808 847 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face))) #("  

Welcome to GNU Emacs, one component of the GNU/Linux operating system.

Emacs Tutorial	Learn basic keystroke commands
Emacs Guided Tour	Overview of Emacs features at gnu.org
View Emacs Manual	View the Emacs manual using Info
Absence of Warranty	GNU Emacs comes with ABSOLUTELY NO WARRANTY
Copying Conditions	Conditions for redistributing and changing Emacs
Ordering Manuals	Purchasing printed copies of manuals

To start...     Open a File     Open Home Directory     Customize Startup
To quit a partially entered command, type Control-g.

This is GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.22, cairo version 1.17.3)
 of 2020-08-28
Copyright (C) 2020 Free Software Foundation, Inc.

Auto-save file lists were found.  If an Emacs session crashed recently,
type M-x recover-session RET to recover the files you were editing." 0 1 (display (space :align-to (+ center (-0.5 image :type svg :file "splash.svg" :scale 1.1094736842105264)))) 1 2 (display (image :type svg :file "splash.svg" :scale 1.1094736842105264) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size))) 4 15 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 24 47 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 56 76 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 90 121 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 121 122 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 139 178 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 195 229 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 248 270 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 270 293 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:slant oblique))) 311 361 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 377 414 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 415 432 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 443 448 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 467 472 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 489 490 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 490 532 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 532 541 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face default) 541 543 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face variable-pitch) 543 552 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 552 656 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 656 657 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-builtin-face)) 657 706 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 706 707 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch (:height 0.8))) 707 742 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 742 785 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face)) 808 847 (help-echo "For information about GNU Emacs and the GNU system, type C-h C-a." face (variable-pitch font-lock-comment-face))) #("nitrogen --restore &
" 0 20 (fontified t) 20 21 (fontified t)) "  #   text"))
(setq search-ring '(#("important f f" 0 13 (isearch-regexp-function nil isearch-case-fold-search t)) #("12" 0 2 (isearch-case-fold-search t isearch-regexp-function nil)) #("font" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("size" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("cur" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) #("cursor" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) #("color" 0 5 (isearch-regexp-function nil isearch-case-fold-search t)) #("draw" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) "GRUB_DEFAU" "theme" "exotica" "og.mode" "xdrawcursor" "hbtransform(spe" "if (mode & ATTR_" "Clear Harfbu"))
(setq regexp-search-ring 'nil)
