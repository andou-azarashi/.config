;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(empty-history magit-revision-history tmm--history command-history exwm-workspace--switch-history yes-or-no-p-history face-name-history buffer-name-history ido-buffer-history ido-file-history minibuffer-history file-name-history extended-command-history shell-command-history))
(setq magit-revision-history '("origin/master"))
(setq tmm--history '("h==>Help" "E==>EXWM" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File" "h==>Help" "E==>EXWM" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File" "h==>Help" "E==>EXWM" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File" "h==>Help" "E==>EXWM" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq command-history '((toggle-word-wrap nil) (org-mode) (find-file "/home/andou/.emacs.d/myinit.org") (package-delete #s(package-desc nyan-mode (1 1 3) "Nyan Cat shows position in current buffer in mode-line." nil nil nil "/home/andou/.emacs.d/elpa/nyan-mode-1.1.3" ((:url . "https://github.com/TeMPOraL/nyan-mode/") (:maintainer "Jacek \"TeMPOraL\" Zlydach" . "temporal.pl@gmail.com") (:authors ("Jacek \"TeMPOraL\" Zlydach" . "temporal.pl@gmail.com")) (:keywords "nyan" "cat" "lulz" "scrolling" "pop tart cat" "build something amazing") (:commit . "06e67ab2c490756d3eeed4a68aba7c33e508a5d5")) nil) nil nil) (find-file "/home/andou/.config/zsh/.zshrc") (magit-show-commit "origin/master" '("--stat" "--no-ext-diff") nil nil) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "29fb0ec") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "7b205c1") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "61a31e8e09eead54266a13275fa7908e8902a2cd") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "Setting changed") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "7b205c1 Setting changed") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.pager" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "29fb0ec") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "7b205c1") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "61a31e8e09eead54266a13275fa7908e8902a2cd") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "Setting changed") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "7b205c1 Setting changed") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "7b205c1f4d4fbf21eaff000abbd16b8716751858") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.pager" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "pacman.conf") (find-file "/sudo::/etc/pacman.conf") (customize-themes) (find-file "/home/andou/.config/newsboat/urls") (kill-buffer "Gimp-2.10") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "st") (kill-buffer ".xinitrc") (find-file "/home/andou/.xinitrc") (kill-buffer "Fcitx-config-gtk3") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "fcitx-configtool ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "brave ") (kill-buffer ".xinitrc") (kill-buffer ".zprofile") (find-file "/home/andou/.config/zsh/.zprofile") (kill-buffer ".xinitrc") (find-file "/home/andou/.config/zsh/.zprofile") (kill-buffer ".gitconfig") (kill-buffer ".xinitrc") (find-file "/home/andou/.xinitrc") (kill-buffer "myinit.org") (kill-buffer "Brave-browser") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "gimp") (kill-buffer "*ansi-term*") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "krita") (switch-to-buffer "Brave-browser") (ansi-term "/bin/zsh") (dired "/home/andou/learnc/head_first/" nil) (kill-buffer "grub") (find-file "/sudo::/etc/default/grub") (kill-buffer "grub") (dired "/etc/default/" nil) (kill-buffer "Brave-browser") (shell-command "reboot" nil nil) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "polychromatic-controller ") (shell-command "poweroff" nil nil) (kill-buffer "Brave-browser") (kill-buffer "main.c") (find-file "/home/andou/learnc/calculator/main.c") (kill-buffer "main.c") (find-file "/home/andou/learnc/caculator/main.c") (kill-buffer "switch_card.c") (dired "/home/andou/learnc/" nil) (kill-buffer "Brave-browser") (kill-buffer "Brave-browser") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "steam") (kill-buffer "tictactoe.c") (find-file "/home/andou/test_project/tictactoe_c/tictactoe.c") (kill-buffer "Brave-browser") (kill-buffer ".gitconfig") (kill-buffer "*Edit Macro*") (find-file "/home/andou/.gitconfig") (switch-to-buffer "Brave-browser") (kill-buffer "myinit.org") (kill-buffer ".en_QC") (find-file "/home/andou/.en_QC") (kill-buffer "myinit.org") (kill-buffer "Brave-browser") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "flameshot ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "dmenu") (kill-buffer "Brave-browser") (kill-buffer "myinit.org") (kill-buffer "Brave-browser") (kill-buffer "tictactoe.c") (find-file "/home/andou/test_project/tictactoe_c/tictactoe.c") (kill-buffer "myinit.org") (find-file "/home/andou/.xinitrc") (kill-buffer "Brave-browser") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "woeusb") (switch-to-buffer "Brave-browser") (kill-buffer "COMMIT_EDITMSG") (kill-buffer "Brave-browser") (switch-to-buffer "Brave-browser") (kill-buffer "*unsent mail*") (kill-buffer "myinit.org") (kill-buffer "*ansi-term*") (kill-buffer "Brave-browser") (kill-buffer "myinit.org") (kill-buffer "*ansi-term*") (kill-buffer "myinit.org") (kill-buffer "*terminal*") (term "/bin/zsh") (kill-buffer "Brave-browser") (kill-buffer "myinit.org") (kill-buffer "*terminal*") (load-file "/home/andou/.emacs.d/init.el") (kill-buffer "myinit.org") (kill-buffer "init.el") (find-file "/home/andou/.emacs.d/init.el") (switch-to-buffer "Brave-browser") (customize-face '(default)) (kill-buffer "*terminal*") (switch-to-buffer "Brave-browser") (kill-buffer "*shell*") (shell nil) (switch-to-buffer "Brave-browser") (kill-buffer "lfrc") (find-file "/home/andou/.config/lf/lfrc") (kill-buffer "lfrc") (find-file "/home/andou/.config/lf/lfrc") (dired "/home/andou/.config/" nil) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "c91649b") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "2c19dfb") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "696736ef7d1795040d90b4104fecb207afab6b5b") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "2c19dfb70e000d8fddc16716c162c7b56badae83") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "Change vimb styles.css") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "2c19dfb70e000d8fddc16716c162c7b56badae83") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "2c19dfb Change vimb styles.css") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "2c19dfb70e000d8fddc16716c162c7b56badae83") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((63 . 34) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "c91649bf1c7d84e095a40469ff8656ff1ccb2973^{commit}" "--") . #("c91649b deleted the plugin folder fome repo folder" 0 7 (face magit-hash))) (("/home/andou/.config/" "ls-files" "--unmerged")) (("/home/andou/.config/" "rev-parse" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" magit-git-dir "sequencer/head") . "/home/andou/.config/.git/sequencer/head") (("/home/andou/.config/" magit-git-dir "sequencer/todo") . "/home/andou/.config/.git/sequencer/todo") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "style.css") (find-file "/home/andou/.config/vimb/style.css") (kill-buffer "style.css") (find-file "/home/andou/.config/vimb/style.css") (kill-buffer "pcloud") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "pcloud ") (magit-status "/home/andou/.config/" '((63 . 34) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "c91649bf1c7d84e095a40469ff8656ff1ccb2973^{commit}" "--") . #("c91649b deleted the plugin folder fome repo folder" 0 7 (face magit-hash))) (("/home/andou/.config/" "ls-files" "--unmerged")) (("/home/andou/.config/" "rev-parse" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" magit-git-dir "sequencer/head") . "/home/andou/.config/.git/sequencer/head") (("/home/andou/.config/" magit-git-dir "sequencer/todo") . "/home/andou/.config/.git/sequencer/todo") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "Fcitx-config-gtk3") (magit-status "/home/andou/.config/" '((64 . 34) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "c91649bf1c7d84e095a40469ff8656ff1ccb2973^{commit}" "--") . #("c91649b deleted the plugin folder fome repo folder" 0 7 (face magit-hash))) (("/home/andou/.config/" "ls-files" "--unmerged")) (("/home/andou/.config/" "rev-parse" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" magit-git-dir "sequencer/head") . "/home/andou/.config/.git/sequencer/head") (("/home/andou/.config/" magit-git-dir "sequencer/todo") . "/home/andou/.config/.git/sequencer/todo") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer "Brave-browser<2>") (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "7233cc4") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "c91649b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "aad67c3427ff90fa871b18f4cadcd46a48cf2cbc") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "deleted the plugin folder fome repo folder") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c91649b deleted the plugin folder fome repo folder") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "c91649bf1c7d84e095a40469ff8656ff1ccb2973") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer ".gitignore") (find-file "/home/andou/.config/.gitignore") (kill-buffer ".zprofile") (magit-status "/home/andou/.config/" '((59 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "de73003") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "945ed9b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "49548fe3c4a79c39a16bf5acf25825f8676cfc1b") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "change git editor") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "945ed9b change git editor") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "de73003") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "945ed9b") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "49548fe3c4a79c39a16bf5acf25825f8676cfc1b") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "change git editor") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "945ed9b change git editor") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "945ed9bdd689af09d207009b28597cd6388f98be") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacsclient -c -a emacs") "core.pager" ("emacsclient -c -a emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer ".gitconfig") (find-file "/home/andou/.gitconfig") (kill-buffer ".zprofile") (find-file "/home/andou/.config/zsh/.zprofile") (kill-buffer ".asoundrc") (find-file "/home/andou/.asoundrc") (kill-buffer "Steam") (find-file "/home/andou/.xinitrc") (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "61a31e8") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "de73003") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "c971419f45bcc9904a55d4c05e128d1f0900bf31") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "minor change") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "de73003 minor change") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs") "core.pager" ("emacs") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (kill-buffer ".zprofile") (find-file "/home/andou/.config/zsh/.zprofile") (kill-buffer ".gitconfig") (find-file "/home/andou/.gitconfig") (kill-buffer "myinit.org") (magit-status "/home/andou/.config/" '((60 . 29) (("/home/andou/.config/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote)))) (("/home/andou/.config/" "rev-parse" "--short" "HEAD~") . "61a31e8") (("/home/andou/.config/" "rev-parse" "--short" "HEAD") . "de73003") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD~10") . "c971419f45bcc9904a55d4c05e128d1f0900bf31") (("/home/andou/.config/" "rev-parse" "@{upstream}") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "rev-parse" "--verify" "refs/stash")) (("/home/andou/.config/" "rev-parse" "--is-bare-repository") . "false
") (("/home/andou/.config/" magit-git-dir "BISECT_LOG") . "/home/andou/.config/.git/BISECT_LOG") (("/home/andou/.config/" magit-git-dir "REVERT_HEAD") . "/home/andou/.config/.git/REVERT_HEAD") (("/home/andou/.config/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/andou/.config/.git/CHERRY_PICK_HEAD") (("/home/andou/.config/" magit-git-dir "rebase-apply/applying") . "/home/andou/.config/.git/rebase-apply/applying") (("/home/andou/.config/" magit-git-dir "rebase-apply/onto") . "/home/andou/.config/.git/rebase-apply/onto") (("/home/andou/.config/" magit-git-dir "rebase-merge") . "/home/andou/.config/.git/rebase-merge") (("/home/andou/.config/" magit-git-dir "MERGE_HEAD") . "/home/andou/.config/.git/MERGE_HEAD") (("/home/andou/.config/" "rev-parse" "--git-dir") . ".git") (("/home/andou/.config/" "describe" "--contains" "HEAD")) (("/home/andou/.config/" "describe" "--long" "--tags")) (("/home/andou/.config/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote)) "--") . "minor change") (("/home/andou/.config/" "rev-parse" "--verify" #("origin/master" 0 13 (face magit-branch-remote))) . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "de73003 minor change") (("/home/andou/.config/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/andou/.config/" "rev-parse" "--verify" "HEAD") . "de73003276c56d1fe4221bdae52903376ff68f83") (("/home/andou/.config/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("andou-azarashi") "user.email" ("akiyamakazuya_miku@icloud.com") "core.editor" ("emacs -c") "core.pager" ("emacs -c") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:andou-azarashi/config.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/andou/.config/" . magit-toplevel) . "/home/andou/.config/") (("/home/andou/.config/" "rev-parse" "--show-cdup") . "") (("/home/andou/.config/" "rev-parse" "--show-toplevel") . "/home/andou/.config") (("~/" . magit-toplevel)) (("/home/andou/" "rev-parse" "--git-dir")) (("/home/andou/" "rev-parse" "--show-toplevel")))) (git-commit-save-message) (kill-buffer "init.vim") (kill-buffer "Emacs") (server-force-delete nil) (kill-buffer "Emacs") (kill-buffer ".gitconfig") (find-file "/home/andou/.gitconfig") (kill-buffer "Emacs") (kill-buffer ".zprofile") (kill-buffer ".gitconfig") (find-file "/home/andou/.config/zsh/.zprofile") (find-file "/home/andou/.gitconfig") (kill-buffer "Emacs") (switch-to-buffer "Brave-browser") (switch-to-buffer "andou") (switch-to-buffer "unity_test") (dired "/home/andou/" nil) (kill-buffer "test.html") (find-file "/home/andou/test.html") (kill-buffer "myinit.org") (kill-buffer "Brave-browser") (kill-buffer "myinit.org") (kill-buffer "config.h") (find-file "/home/andou/main/st/config.h") (kill-buffer "config.h") (find-file "/home/andou/main/st/config.h") (package-install 'gruvbox-theme nil) (package-refresh-contents) (kill-buffer "myinit.org") (kill-buffer ".zprofile") (find-file "/home/andou/.config/zsh/.zprofile") (kill-buffer ".zshrc") (zap-to-char 1 27) (package-delete #s(package-desc spacemacs-theme (20200615 1304) "Color theme with a dark and light versions" nil nil nil "/home/andou/.emacs.d/elpa/spacemacs-theme-20200615.1304" ((:url . "https://github.com/nashamri/spacemacs-theme") (:keywords "color" "theme") (:commit . "e39254159a4fa99a1a92037e4ae23216d362aab1")) nil) nil nil) (package-delete #s(package-desc doom-themes (20200730 744) "an opinionated pack of modern color-themes" ((emacs (25 1)) (cl-lib (0 5))) nil nil "/home/andou/.emacs.d/elpa/doom-themes-20200730.744" ((:url . "https://github.com/hlissner/emacs-doom-theme") (:maintainer "Henrik Lissner" . "henrik@lissner.net") (:authors ("Henrik Lissner <http://github/hlissner>")) (:keywords "dark" "light" "blue" "atom" "one" "theme" "neotree" "icons" "faces" "nova") (:commit . "180747a4cb848b6378b13bcaf908ea12c95bb4a6")) nil) nil nil) (kill-buffer "Brave-browser") (package-install 'doom-themes nil) (package-delete #s(package-desc monokai-theme (20200416 2001) "A fruity color theme for Emacs." nil nil nil "/home/andou/.emacs.d/elpa/monokai-theme-20200416.2001" ((:url . "http://github.com/oneKelvinSmith/monokai-emacs") (:maintainer "Kelvin Smith" . "oneKelvinSmith@gmail.com") (:authors ("Kelvin Smith" . "oneKelvinSmith@gmail.com")) (:commit . "4281fc13dadef98942c8d43024de024f2392fec5")) nil) nil nil) (zap-to-char 1 134217827) (package-install 'monokai-theme nil) (package-install 'spacemacs-theme nil) (switch-to-buffer "Brave-browser") (kill-buffer "myinit.org") (shell-command "dmenu" nil nil) (kill-buffer "Brave-browser") (package-install 'exotica-theme nil) (kill-buffer "Brave-browser") (kill-buffer "myinit.org") (kill-buffer "myinit.org") (list-packages nil) (kill-buffer "myinit.org") (kill-buffer "*Org Src myinit.org[ emacs-lisp ]*") (list-packages nil) (describe-key "\241" 1 nil) (shell-command "dmenufm" nil nil) (shell-command "demufm" nil nil) (describe-key [67108897] 1 nil) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "dmenufm") (describe-key "c" 1 nil) (switch-to-buffer "Brave-browser")))
(setq exwm-workspace--switch-history '(#("[0] 1  2  3 " 1 2 (face nil) 4 5 (face (:foreground "green")) 7 8 (face (:foreground "green")) 10 11 (face (:foreground "green"))) #(" 0 [1] 2  3 " 1 2 (face nil) 4 5 (face (:foreground "green")) 7 8 (face (:foreground "green")) 10 11 (face (:foreground "green"))) #(" 0  1 [2] 3 " 1 2 (face nil) 4 5 (face (:foreground "green")) 7 8 (face (:foreground "green")) 10 11 (face (:foreground "green"))) #(" 0  1  2 [3]" 1 2 (face nil) 4 5 (face (:foreground "green")) 7 8 (face (:foreground "green")) 10 11 (face (:foreground "green")))))
(setq yes-or-no-p-history '("no" "yes"))
(setq face-name-history '("default"))
(setq buffer-name-history '("pacman.conf" "Gimp-2.10" ".xinitrc" "Fcitx-config-gtk3" ".zprofile" ".gitconfig" "myinit.org" "Brave-browser" "*ansi-term*" "grub" "main.c" "switch_card.c" "tictactoe.c" "*Edit Macro*" ".en_QC" "COMMIT_EDITMSG" "*unsent mail*" "*terminal*" "init.el" "*shell*" "lfrc" "style.css" "pcloud" "Brave-browser<2>" ".gitignore" ".asoundrc" "Steam" "init.vim" "Emacs" " Brave-browser" "andou" "unity_test" "test.html" "config.h" ".zshrc" "*Org Src myinit.org[ emacs-lisp ]*" "evdev.lst" "exwm-autoloads.el" "exwm-core.el" ".emacs.d" "exwm.org" "exwm-config.el" "x.c" "win.h" "config.mk" "Makefile" "*scratch*" "st-256color" "custom.el.gz" "myinit.o"))
(setq ido-buffer-history '("pacman.conf" "Gimp-2.10" ".xinitrc" "Fcitx-config-gtk3" ".zprofile" ".gitconfig" "myinit.org" "Brave-browser" "*ansi-term*" "grub" "main.c" "switch_card.c" "tictactoe.c" "*Edit Macro*" ".en_QC" "COMMIT_EDITMSG" "*unsent mail*" "*terminal*" "init.el" "*shell*" "lfrc" "style.css" "pcloud" "Brave-browser<2>" ".gitignore" ".asoundrc" "Steam" "init.vim" "Emacs" " Brave-browser" "andou" "unity_test" "test.html" "config.h" ".zshrc" "*Org Src myinit.org[ emacs-lisp ]*" "evdev.lst" "exwm-autoloads.el" "exwm-core.el" ".emacs.d" "exwm.org" nil "exwm-config.el" "x.c" "win.h" "config.mk" "Makefile" "*scratch*" "st-256color" "custom.el.gz" "myinit.el"))
(setq ido-file-history '("myinit.org" ".zshrc" "." "pacman.conf" "urls" ".xinitrc" ".zprofile" "grub" "main.c" "tictactoe.c" ".gitconfig" ".en_QC" "init.el" "lfrc" "style.css" ".gitignore" ".asoundrc" "test.html" "config.h" "evdev.lst" "exwm-config.el" "exwm.org" "init.vim" "myinit.el"))
(setq minibuffer-history '("nyan-mode-1.1.3" "/bin/zsh" "#" "gruvbox-theme" "spacemacs-theme-20200615.1304" "doom-themes-20200730.744" "doom-themes" "monokai-theme-20200416.2001" "monokai-theme" "spacemacs-theme" "exotica-theme" "frame-background-mode" "solarized-theme-1.3.1" "\"" "dracula-theme-1.7.0" "gruvbox-theme-1.28.0" "solarized-theme" "use-package"))
(setq file-name-history '("/home/andou/.emacs.d/myinit.org" "/home/andou/.config/zsh/.zshrc" "/sudo::/etc/pacman.conf" "/home/andou/.config/newsboat/urls" "/home/andou/.xinitrc" "/home/andou/.config/zsh/.zprofile" "/sudo::/etc/default/grub" "/home/andou/learnc/calculator/main.c" "/home/andou/learnc/caculator/main.c" "/home/andou/test_project/tictactoe_c/tictactoe.c" "/home/andou/.gitconfig" "/home/andou/.en_QC" "/home/andou/.config/.git/COMMIT_EDITMSG" "/home/andou/.emacs.d/init.el" "/home/andou/.config/lf/lfrc" "/home/andou/.config/vimb/style.css" "/home/andou/.config/.gitignore" "/home/andou/.asoundrc" "/home/andou/test.html" "/home/andou/main/st/config.h" "/usr/share/X11/xkb/rules/evdev.lst" "/home/andou/.emacs.d/elpa/exwm-0.24/exwm-config.el" "/home/andou/.emacs.d/exwm.org" "/home/andou/.config/nvim/init.vim" "~/.emacs.d/myinit.org" "~/.emacs.d/myinit.o" "~/.emacs.d/init.el" "/home/andou/.emacs.d/myinit.el"))
(setq extended-command-history '("toggle-word-wrap" "org-mode" "package-delete" "customize-themes" "ansi-term" "dired" "term" "load-file" "customize-face" "shell" "git-commit-save-message" "server-force-delete" "package-install" "package-refresh-contents" "list-packages" "describe-key" "copy-directory" "copy-file" "customize-variable"))
(setq shell-command-history '("st" "fcitx-configtool " "brave " "gimp" "krita" "reboot" "polychromatic-controller " "poweroff" "steam" "flameshot " "dmenu" "woeusb" "pcloud " "dmenufm" "demufm" "minecraft-launcher " "vimb" "brave"))
(setq kill-ring '(#("# End of lines configured by zsh-newuser-install
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 48 (fontified t face font-lock-comment-face) 48 49 (fontified t)) #("# PROMPT=\\$vcs_info_msg_0_'%# '
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 28 (fontified t face font-lock-comment-face) 28 29 (fontified t syntax-table (3) face font-lock-comment-face) 29 31 (fontified t face font-lock-comment-face) 31 32 (fontified t)) #("	{ \"sxiv\",    NULL,     NULL,           0,         0,          1,           0,        -1 },
" 0 3 (fontified t) 3 9 (face font-lock-string-face fontified t) 9 14 (fontified t) 14 18 (face font-lock-constant-face fontified t) 18 24 (fontified t) 24 28 (face font-lock-constant-face fontified t) 28 91 (fontified t) 91 92 (fontified t)) #("ranger" 0 6 (face font-lock-string-face fontified t)) #("true" 0 4 (fontified t)) #("	pager = nvim" 0 1 (fontified t) 1 6 (fontified t face font-lock-variable-name-face) 6 13 (fontified t)) #("nvim" 0 4 (fontified t)) #("nvim" 0 4 (fontified t)) "set icons true
" "https://rss.app/feeds/93SJrnhu2yd5T5sH.xml" #("Dumb setting" 0 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-delimiter-face fontified t) 5 10 (face font-lock-comment-face fontified t) 10 12 (face font-lock-comment-face fontified t)) #("
# DWM settings
# while true; do
#     xsetroot -name \"$( date +\"%F %R\" )\"
#     sleep 1m    # Update time every minute
# done &
# exec dwm
" 0 1 (fontified t) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 16 (fontified t face font-lock-comment-face) 16 18 (fontified t face font-lock-comment-delimiter-face) 18 33 (fontified t face font-lock-comment-face) 33 39 (fontified t face font-lock-comment-delimiter-face) 39 75 (fontified t face font-lock-comment-face) 75 81 (fontified t face font-lock-comment-delimiter-face) 81 120 (fontified t face font-lock-comment-face) 120 122 (fontified t face font-lock-comment-delimiter-face) 122 129 (fontified t face font-lock-comment-face) 129 131 (fontified t face font-lock-comment-delimiter-face) 131 140 (fontified t face font-lock-comment-face)) #("
" 0 1 (fontified t)) #("# nitrogen --restore &
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 22 (face font-lock-comment-face fontified t) 22 23 (fontified t)) #("pcloud -b &" 0 11 (fontified t)) #("# nitrogen --restore &" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 22 (fontified t face font-lock-comment-face)) #("
" 0 1 (fontified t)) #("# The next line of command is for apple keyboard to swap control and super key.
# setxkbmap -option ctrl:swap_lwin_lctl &
# setxkbmap -option altwin:swap_lalt_lwin &
# setxkbmap -option alias:swap_alt_win &
# setxkbmap -option caps:ctrl_modifier &
# setxkbmap -option ctrl:swap_lalt_lctl_lwin &" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 80 (fontified t face font-lock-comment-face) 80 82 (fontified t face font-lock-comment-delimiter-face) 82 122 (fontified t face font-lock-comment-face) 122 124 (fontified t face font-lock-comment-delimiter-face) 124 166 (fontified t face font-lock-comment-face) 166 168 (fontified t face font-lock-comment-delimiter-face) 168 207 (fontified t face font-lock-comment-face) 207 209 (fontified t face font-lock-comment-delimiter-face) 209 248 (fontified t face font-lock-comment-face) 248 250 (fontified t face font-lock-comment-delimiter-face) 250 294 (fontified t face font-lock-comment-face)) #("#!/bin/sh

" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 7 (face font-lock-comment-face fontified t) 7 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 11 (fontified t)) #("client -c -a emacs" 0 18 (fontified t)) #("    case 1:
      printf(\"%d + %d = %d\", a, b,a + b);
      break;" 0 4 (fontified t) 4 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t c-type c-decl-end) 11 12 (fontified t) 12 18 (fontified t) 18 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 60 (fontified t) 60 65 (fontified t face font-lock-keyword-face) 65 66 (fontified t)) #("emacs\"" 0 5 (fontified t) 5 6 (face font-lock-string-face fontified t)) "3eH9aC7B" "Passwd" #("** systemtray
#+BEGIN_SRC emacs-lisp
  ;; (require 'exwm-systemtray)
  ;; (exwm-systemtray-enable)
#+END_SRC
" 0 1 (fontified t face org-level-2) 1 3 (fontified t face org-level-2) 3 13 (fontified t face org-level-2) 13 14 (fontified t) 14 27 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 27 36 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 36 37 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 37 39 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39 42 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 42 69 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 69 71 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 71 74 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 74 98 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 98 99 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 99 108 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 108 109 (fontified t)) #("** randr
#+BEGIN_SRC emacs-lisp
  ;; (require 'exwm-randr)
  ;; (setq exwm-randr-workspace-output-plist '(0 \"DP-2\"))
  ;; (add-hook 'exwm-randr-screen-change-hook
  ;; 	  (lambda ()
  ;; 	    (start-process-shell-command
  ;; 	     \"xrandr\" nil \"xrandr --output DP-2 --mode 1920x1080 --pos 0x0 --rotate normal\")))
  ;; (exwm-randr-enable)
#+END_SRC
" 0 1 (fontified t face org-level-2) 1 3 (fontified t face org-level-2) 3 8 (fontified t face org-level-2) 8 9 (fontified t) 9 31 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 31 32 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 32 34 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 34 37 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 37 59 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 59 61 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 61 64 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 64 117 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 117 119 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 119 122 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 122 163 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 163 165 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 165 168 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 168 182 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 182 184 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 184 187 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 187 221 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 221 223 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 223 226 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 226 314 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 314 316 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 316 319 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 319 338 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 338 339 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 339 348 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 348 349 (fontified t)) #("** Term
#+BEGIN_SRC emacs-lisp
  (setq ansi-term \"/bin/zsh\")
#+END_SRC
" 0 1 (face org-level-2 fontified t) 1 3 (face org-level-2 fontified t) 3 7 (face org-level-2 fontified t) 7 8 (fontified t) 8 30 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 30 31 (help-echo nil face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 31 34 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 34 38 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 38 49 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 49 59 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 59 60 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 60 61 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 61 70 (font-lock-multiline t face org-block-end-line font-lock-fontified t fontified t) 70 71 (fontified t)) #("** Term
#+BEGIN_SRC emacs-lisp
  (setq multi-term-program \"/bin/zsh\")
  ;; (setq multi-term-program \"/home/andou/.local/bin/st\")
#+END_SRC
" 0 1 (fontified t face org-level-2) 1 3 (fontified t face org-level-2) 3 7 (fontified t face org-level-2) 7 8 (fontified t) 8 30 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 30 31 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 31 34 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 34 38 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 38 58 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 58 59 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 59 68 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 68 72 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 72 75 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 75 101 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t) 101 104 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t) 104 113 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t) 113 128 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 128 129 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 129 138 (fontified t font-lock-fontified t face org-block-end-line font-lock-multiline t) 138 139 (fontified t)) #("UTF8_STRING COMPOUND_TEXT TEXT STRING)))
#+END_SRC
** Term
" 0 5 (fontified t font-lock-fontified t src-block t) 5 12 (fontified t src-block t font-lock-fontified t) 12 21 (fontified t font-lock-fontified t src-block t) 21 26 (fontified t src-block t font-lock-fontified t) 26 31 (fontified t font-lock-fontified t src-block t) 31 40 (fontified t src-block t font-lock-fontified t) 40 41 (fontified t src-block t font-lock-fontified t) 41 43 (font-lock-fontified t src-block t fontified t) 43 47 (src-block t font-lock-fontified t fontified t) 47 50 (font-lock-fontified t fontified t) 50 51 (fontified t font-lock-fontified t) 51 52 (font-lock-fontified t fontified t) 52 54 (font-lock-fontified t fontified t) 54 58 (font-lock-fontified t fontified t) 58 59 (fontified t font-lock-fontified t)) #("UTF8_STRING COMPOUND_TEXT TEXT STRING)))
#+END_SRC
** Term
(setq multi-term-program \"/bin/zsh\")
" 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 12 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 12 21 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 21 26 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 26 31 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 31 40 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 40 41 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 41 43 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 43 47 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 47 50 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 50 51 (fontified t font-lock-fontified t face org-block-end-line) 51 52 (fontified t font-lock-fontified t face org-level-2) 52 54 (fontified t font-lock-fontified t face org-level-2) 54 58 (face org-level-2 font-lock-fontified t fontified t) 58 59 (font-lock-fontified t fontified t) 59 60 (fontified t) 60 65 (fontified t) 65 71 (fontified t) 71 76 (fontified t) 76 85 (fontified t) 85 86 (fontified t) 86 90 (fontified t face (italic) font-lock-multiline t org-emphasis t) 90 95 (fontified t) 95 96 (fontified t rear-nonsticky t)) "(setq multi-term-program \"/bin/zsh\")
" #("set smartcase on" 0 16 (fontified t)) "set smartcase on
" "icons on" #("This reverts commit c91649bf1c7d84e095a40469ff8656ff1ccb2973." 0 61 (face git-commit-summary fontified t)) "body::-webkit-scrollbar {
    display: none;
}
" "*,div,pre,textarea,body,input,td,tr,p {
    background-color: #303030 !important;
    background-image: none !important;
    color: #bbbbbb !important;
}
h1,h2,h3,h4 {
    background-color: #303030 !important;
    color: #b8ddea !important;
}
a {
    color: #70e070 !important;
}
a:hover,a:focus {
    color: #7070e0 !important;
}
a:visited {
    color: #e07070 !important;
}
img {
    opacity: .5;
}
img:hover {
    opacity: 1;
}

/* Hint mode color styling
 * Color scheme: Base16 Eighties (https://github.com/chriskempson/base16)
 *
 * The precedence of the user style is lower than that of the website so you
 * have to mark your style definition to have higher priority.
 */
span[vimbhint^='label'] {
    background-color: #f2f0ec !important;
    border: 1px solid #2d2d2d !important;
    color: #2d2d2d !important;
    font: bold 10pt monospace !important;
    opacity: 1 !important;
    padding: .1em .4em !important;
    text-transform: uppercase !important;
}
span[vimbhint='label focus'] {
    font: bold 13pt monospace !important;
}
*[vimbhint^='hint'] {
    background-color: #ffcc66 !important;
    color: #2d2d2d !important;
}
*[vimbhint='hint focus'] {
    background-color: #6699cc !important;
    color: #2d2d2d !important;
}
" #("\"emacsclient -c -a emacs\"" 0 24 (fontified t face font-lock-string-face) 24 25 (fontified t rear-nonsticky t face font-lock-string-face)) #("emacsemacs" 0 4 (fontified t) 4 5 (fontified t rear-nonsticky t) 5 9 (fontified t) 9 10 (fontified t rear-nonsticky t)) #("emacs" 0 5 (fontified t)) #("\"emacsclient -c -a emacs\"" 0 25 (fontified t face font-lock-string-face)) "pcm.!default {
        type hw
        card 0
        device 0
}

ctl.!default {
        type hw
        card 0
        device 0
}
" #("# The next line of command is for apple keyboard to swap control and super key." 0 2 (fontified t face font-lock-comment-delimiter-face) 2 79 (fontified t face font-lock-comment-face)) #("# xmobar /home/andou/.config/xmobar/xmobarrc &
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 46 (face font-lock-comment-face fontified t) 46 47 (fontified t)) #("emacs" 0 5 (fontified t)) #("emacs -c -a emacs" 0 17 (fontified t)) #("** open dmenu
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd \"s-d\") 'shell-command)
#+END_SRC
" 0 1 (fontified t face org-level-2) 1 3 (fontified t face org-level-2) 3 13 (fontified t face org-level-2) 13 14 (fontified t) 14 36 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 36 37 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 37 60 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 60 65 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 65 82 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 82 83 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 83 92 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 92 93 (fontified t)) #("1d2021" 0 6 (face font-lock-comment-face fontified t)) #("
" 0 1 (fontified t)) "+unsigned int defaultfg = 15;
+unsigned int defaultbg = 0;
+static unsigned int defaultcs = 15;
 static unsigned int defaultrcs = 257;
" #("
" 0 1 (fontified t c-is-sws t)) "+  /* 8 normal colors */
+  [0] = \"#282828\", /* hard contrast: #1d2021 / soft contrast: #32302f */
+  [1] = \"#cc241d\", /* red     */
+  [2] = \"#98971a\", /* green   */
+  [3] = \"#d79921\", /* yellow  */
+  [4] = \"#458588\", /* blue    */
+  [5] = \"#b16286\", /* magenta */
+  [6] = \"#689d6a\", /* cyan    */
+  [7] = \"#a89984\", /* white   */
+
+  /* 8 bright colors */
+  [8]  = \"#928374\", /* black   */
+  [9]  = \"#fb4934\", /* red     */
+  [10] = \"#b8bb26\", /* green   */
+  [11] = \"#fabd2f\", /* yellow  */
+  [12] = \"#83a598\", /* blue    */
+  [13] = \"#d3869b\", /* magenta */
+  [14] = \"#8ec07c\", /* cyan    */
+  [15] = \"#ebdbb2\", /* white   */
" #("# export EDITOR=\"emacsclient -c\"		# $EDITOR opens in GUI mode
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 61 (face font-lock-comment-face fontified t) 61 62 (fontified t)) #("** spacemac
#+BEGIN_SRC emacs-lisp
  (load-theme ' t)
#+END_SRC
" 0 1 (fontified t face org-level-2) 1 3 (fontified t face org-level-2) 3 11 (fontified t face org-level-2) 11 12 (fontified t) 12 34 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 34 35 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 35 53 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 53 54 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 54 63 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 63 64 (fontified t)) #("** monokai
#+BEGIN_SRC emacs-lisp
  (load-theme 'monokai t)
#+END_SRC
" 0 1 (fontified t face org-level-2) 1 3 (fontified t face org-level-2) 3 10 (fontified t face org-level-2) 10 11 (fontified t) 11 33 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 33 34 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 34 59 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 59 60 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 60 69 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 69 70 (fontified t)) #("** monokai
#+BEGIN_SRC emacs-lisp
  (load-theme 'monokai t)
#+END_SRC
" 0 1 (fontified t face org-level-2) 1 3 (fontified t face org-level-2) 3 10 (fontified t face org-level-2) 10 11 (fontified t) 11 33 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 33 34 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 34 59 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 59 60 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 60 69 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 69 70 (fontified t)) #("dmenu" 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("** Theme
#+BEGIN_SRC emacs-lisp
  (load-theme 'solarized t)
#+END_SRC
" 0 1 (fontified t face org-level-2) 1 3 (fontified t face org-level-2) 3 8 (fontified t face org-level-2) 8 9 (fontified t) 9 31 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 31 32 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 32 59 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 59 60 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 60 69 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 69 70 (fontified t)) #("(setq global-set-key (kbd 's-d))" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 32 (fontified t)) #("stable" 0 6 (fontified t help-echo nil htmlize-link (:uri "https://stable.melpa.org/packages/") font-lock-fontified t src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face (font-lock-string-face org-block)))))
(setq search-ring '("color" #("draw" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) "GRUB_DEFAU" "theme" "exotica" "og.mode" "xdrawcursor" "hbtransform(spe" "if (mode & ATTR_" "Clear Harfbu"))
(setq regexp-search-ring 'nil)
